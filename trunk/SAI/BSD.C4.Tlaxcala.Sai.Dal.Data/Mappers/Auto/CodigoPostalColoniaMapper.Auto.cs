
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 28/07/2009 - 08:51 p.m.
// This is a partial class file. The other one is CodigoPostalColoniaMapper.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using System;
using BSD.C4.Tlaxcala.Sai.Dal.Rules.Entities;
using BSD.C4.Tlaxcala.Sai.Dal.Rules.Objects;
using Cooperator.Framework.Data;
using Cooperator.Framework.Data.Exceptions;
using Cooperator.Framework.Core;
using System.Data.Common;
using System.Reflection;
using System.Web;
using System.Data;

namespace BSD.C4.Tlaxcala.Sai.Dal.Rules.Mappers
{

    
    /// <summary>
    /// 
    /// </summary>
    public partial class CodigoPostalColoniaMapper : BaseGateway<CodigoPostalColonia, CodigoPostalColoniaList>, IGenericGateway
    {


        #region "Singleton"

        static CodigoPostalColoniaMapper _instance;

        private CodigoPostalColoniaMapper()
        {
        }

        /// <summary>
        /// 
        /// </summary>
        public static CodigoPostalColoniaMapper Instance() {
            if (_instance == null) {
                if (HttpContext.Current == null) 
                    _instance = new CodigoPostalColoniaMapper();
                else {
                    CodigoPostalColoniaMapper inst = HttpContext.Current.Items["BSD.C4.Tlaxcala.Sai.Dal.Rules.CodigoPostalColoniaMapperSingleton"] as CodigoPostalColoniaMapper;
                    if (inst == null) {
                        inst = new CodigoPostalColoniaMapper();
                        HttpContext.Current.Items.Add("BSD.C4.Tlaxcala.Sai.Dal.Rules.CodigoPostalColoniaMapperSingleton", inst);
                    }
                    return inst;
                }
            }
            return _instance;
        }


        #endregion

        /// <summary>
        /// 
        /// </summary>
        public string[] GetPKPropertiesNames()
        {
            
            string[] s ={"ClaveCodigoPostal","ClaveColonia","ClaveEstado","ClaveMunicipio","ClaveLocalidad"};
            return s;
        }
        /// <summary>
        /// 
        /// </summary>
        public Type GetMappingType()
        {
            return typeof(CodigoPostalColonia);
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string TableName
        {
            get { return "CodigoPostalColonia"; }
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string RuleName
        {
            get {return typeof(CodigoPostalColoniaMapper).FullName;}
        }


        

        /// <summary>
        /// 
        /// </summary>
        protected override void HydrateFields(DbDataReader reader, CodigoPostalColonia entity)
        {
            
            IMappeableCodigoPostalColoniaObject CodigoPostalColonia = (IMappeableCodigoPostalColoniaObject)entity;
            CodigoPostalColonia.HydrateFields(
            reader.GetInt32(0),
reader.GetInt32(1),
reader.GetInt32(2),
reader.GetInt32(3),
reader.GetInt32(4));
        }

        /// <summary>
        /// 
        /// </summary>
        protected override object[] GetFieldsForInsert(CodigoPostalColonia entity)
        {

            IMappeableCodigoPostalColoniaObject CodigoPostalColonia = (IMappeableCodigoPostalColoniaObject)entity;
            return CodigoPostalColonia.GetFieldsForInsert();
        }

        /// <summary>
        /// 
        /// </summary>
        protected override object[] GetFieldsForUpdate(CodigoPostalColonia entity)
        {

            IMappeableCodigoPostalColoniaObject CodigoPostalColonia = (IMappeableCodigoPostalColoniaObject)entity;
            return CodigoPostalColonia.GetFieldsForUpdate();
        }

        /// <summary>
        /// 
        /// </summary>
        protected override object[] GetFieldsForDelete(CodigoPostalColonia entity)
        {

            IMappeableCodigoPostalColoniaObject CodigoPostalColonia = (IMappeableCodigoPostalColoniaObject)entity;
            return CodigoPostalColonia.GetFieldsForDelete();
        }


        /// <summary>
        /// Raised after insert and update
        /// </summary>
        protected override void UpdateObjectFromOutputParams(CodigoPostalColonia entity, object[] parameters)
        {
            // Update properties from Output parameters
            ((IMappeableCodigoPostalColoniaObject) entity).UpdateObjectFromOutputParams(parameters);
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string StoredProceduresPrefix()
        {
            return "up_";
        }


        


        

        /// <summary>
        /// Complete the aggregations for this entity. 
        /// </summary>
        protected override void CompleteEntity(CodigoPostalColonia entity)
        {
            
            ((IMappeableCodigoPostalColonia)entity).CompleteEntity();
        }


        # region CRUD Operations
        

        # endregion

        /// <summary>
        /// Delete children for this entity
        /// </summary>
        public void DeleteChildren(DbTransaction transaction, IUniqueIdentifiable entity)
        {
                        
        }


          





        /// <summary>
        /// Get a CodigoPostalColonia by execute a SQL Query Text
        /// </summary>
        public CodigoPostalColonia GetOneBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectBySQLText(sqlQueryText);
        }

        /// <summary>
        /// Get a CodigoPostalColoniaList by execute a SQL Query Text
        /// </summary>
        public CodigoPostalColoniaList GetBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectListBySQLText(sqlQueryText);
        }


        /// <summary>
        /// 
        /// </summary>
        public CodigoPostalColonia GetOne(System.Int32 ClaveCodigoPostal, System.Int32 ClaveColonia, System.Int32 ClaveEstado, System.Int32 ClaveMunicipio, System.Int32 ClaveLocalidad)
        {
            return base.GetOne(new CodigoPostalColonia(ClaveCodigoPostal, ClaveColonia, ClaveEstado, ClaveMunicipio, ClaveLocalidad));
        }


        // GetOne By Objects and Params
                                    
        /// <summary>
        /// 
        /// </summary>
        public CodigoPostalColonia GetOne(IUniqueIdentifiable CodigoPostal, System.Int32 ClaveColonia, System.Int32 ClaveEstado, System.Int32 ClaveMunicipio, System.Int32 ClaveLocalidad)
        {
        return base.GetObjectByAnyStoredProcedure(StoredProceduresPrefix() + "CodigoPostalColonia_GetOne",  UniqueIdentifierHelper.ComposeIdentifier(CodigoPostal, ClaveColonia, ClaveEstado, ClaveMunicipio, ClaveLocalidad));
        }   
                        


        

        /// <summary>
        /// 
        /// </summary>
        public CodigoPostalColoniaList GetByCodigoPostal(DbTransaction transaction, System.Int32 ClaveCodigoPostal)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "CodigoPostalColonia_GetByCodigoPostal", ClaveCodigoPostal);
        }

        /// <summary>
        /// 
        /// </summary>
        public CodigoPostalColoniaList GetByCodigoPostal(DbTransaction transaction, IUniqueIdentifiable CodigoPostal)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "CodigoPostalColonia_GetByCodigoPostal", CodigoPostal.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public CodigoPostalColoniaList GetByColonia(DbTransaction transaction, System.Int32 ClaveColonia, System.Int32 ClaveEstado, System.Int32 ClaveMunicipio, System.Int32 ClaveLocalidad)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "CodigoPostalColonia_GetByColonia", ClaveColonia, ClaveEstado, ClaveMunicipio, ClaveLocalidad);
        }

        /// <summary>
        /// 
        /// </summary>
        public CodigoPostalColoniaList GetByColonia(DbTransaction transaction, IUniqueIdentifiable Colonia)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "CodigoPostalColonia_GetByColonia", Colonia.Identifier());
        }

    


        

        /// <summary>
        /// 
        /// </summary>
        public CodigoPostalColoniaList GetByCodigoPostal(System.Int32 ClaveCodigoPostal)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "CodigoPostalColonia_GetByCodigoPostal", ClaveCodigoPostal);
        }

        /// <summary>
        /// 
        /// </summary>
        public CodigoPostalColoniaList GetByCodigoPostal(IUniqueIdentifiable CodigoPostal)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "CodigoPostalColonia_GetByCodigoPostal", CodigoPostal.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public CodigoPostalColoniaList GetByColonia(System.Int32 ClaveColonia, System.Int32 ClaveEstado, System.Int32 ClaveMunicipio, System.Int32 ClaveLocalidad)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "CodigoPostalColonia_GetByColonia", ClaveColonia, ClaveEstado, ClaveMunicipio, ClaveLocalidad);
        }

        /// <summary>
        /// 
        /// </summary>
        public CodigoPostalColoniaList GetByColonia(IUniqueIdentifiable Colonia)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "CodigoPostalColonia_GetByColonia", Colonia.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public void Delete(System.Int32 ClaveCodigoPostal, System.Int32 ClaveColonia, System.Int32 ClaveEstado, System.Int32 ClaveMunicipio, System.Int32 ClaveLocalidad)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "CodigoPostalColonia_Delete", ClaveCodigoPostal, ClaveColonia, ClaveEstado, ClaveMunicipio, ClaveLocalidad);
        }

        /// <summary>
        /// 
        /// </summary>
        public void Delete(DbTransaction transaction, System.Int32 ClaveCodigoPostal, System.Int32 ClaveColonia, System.Int32 ClaveEstado, System.Int32 ClaveMunicipio, System.Int32 ClaveLocalidad)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "CodigoPostalColonia_Delete", ClaveCodigoPostal, ClaveColonia, ClaveEstado, ClaveMunicipio, ClaveLocalidad);
        }


        // Delete By Objects and Params
                                    
        /// <summary>
        /// 
        /// </summary>
        public void Delete(IUniqueIdentifiable CodigoPostal, System.Int32 ClaveColonia, System.Int32 ClaveEstado, System.Int32 ClaveMunicipio, System.Int32 ClaveLocalidad)
        {
        base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "CodigoPostalColonia_Delete",  UniqueIdentifierHelper.ComposeIdentifier(CodigoPostal, ClaveColonia, ClaveEstado, ClaveMunicipio, ClaveLocalidad));
        }   
        /// <summary>
        /// 
        /// </summary>
        public void Delete(DbTransaction transaction, IUniqueIdentifiable CodigoPostal, System.Int32 ClaveColonia, System.Int32 ClaveEstado, System.Int32 ClaveMunicipio, System.Int32 ClaveLocalidad)
        {
        base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "CodigoPostalColonia_Delete",  UniqueIdentifierHelper.ComposeIdentifier(CodigoPostal, ClaveColonia, ClaveEstado, ClaveMunicipio, ClaveLocalidad));
        }   
                        



        

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByCodigoPostal(System.Int32 ClaveCodigoPostal)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "CodigoPostalColonia_DeleteByCodigoPostal", ClaveCodigoPostal);
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByCodigoPostal(DbTransaction transaction, System.Int32 ClaveCodigoPostal)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "CodigoPostalColonia_DeleteByCodigoPostal", ClaveCodigoPostal);
        }


        /// <summary>
        /// 
        /// </summary>
        public void DeleteByCodigoPostal(IUniqueIdentifiable CodigoPostal)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "CodigoPostalColonia_DeleteByCodigoPostal", CodigoPostal.Identifier());
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByCodigoPostal(DbTransaction transaction, IUniqueIdentifiable CodigoPostal)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "CodigoPostalColonia_DeleteByCodigoPostal", CodigoPostal.Identifier());
        }


    

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByColonia(System.Int32 ClaveColonia, System.Int32 ClaveEstado, System.Int32 ClaveMunicipio, System.Int32 ClaveLocalidad)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "CodigoPostalColonia_DeleteByColonia", ClaveColonia, ClaveEstado, ClaveMunicipio, ClaveLocalidad);
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByColonia(DbTransaction transaction, System.Int32 ClaveColonia, System.Int32 ClaveEstado, System.Int32 ClaveMunicipio, System.Int32 ClaveLocalidad)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "CodigoPostalColonia_DeleteByColonia", ClaveColonia, ClaveEstado, ClaveMunicipio, ClaveLocalidad);
        }


        /// <summary>
        /// 
        /// </summary>
        public void DeleteByColonia(IUniqueIdentifiable Colonia)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "CodigoPostalColonia_DeleteByColonia", Colonia.Identifier());
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByColonia(DbTransaction transaction, IUniqueIdentifiable Colonia)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "CodigoPostalColonia_DeleteByColonia", Colonia.Identifier());
        }


    


        //Database Queries 
        


        #region IGenericGateway

        object IGenericGateway.GetOne(IUniqueIdentifiable identifier)
        {
            return base.GetOne(identifier);
        }

        object IGenericGateway.GetAll()
        {
            return base.GetAll();
        }

        object IGenericGateway.GetByParent(IUniqueIdentifiable parentEntity)
        {
            return base.GetByParent(parentEntity);
        }

        #endregion


    }


}

namespace BSD.C4.Tlaxcala.Sai.Dal.Rules.Wrappers
{
    /// <summary>
    /// 
    /// </summary>
    public class CodigoPostalColoniaMapperWrapper
    {

        /// <summary>
        /// 
        /// </summary>
        public string[] GetPKPropertiesNames()
        {
            return Instance().GetPKPropertiesNames();
        }
        /// <summary>
        /// 
        /// </summary>
        public Type GetMappingType()
        {
            return Instance().GetMappingType();
        }



        /// <summary>
        /// 
        /// </summary>
        public BSD.C4.Tlaxcala.Sai.Dal.Rules.Mappers.CodigoPostalColoniaMapper Instance()
        {
            return BSD.C4.Tlaxcala.Sai.Dal.Rules.Mappers.CodigoPostalColoniaMapper.Instance(); 
        }
        
        /// <summary>
        /// Get a CodigoPostalColoniaEntity by calling a Stored Procedure
        /// </summary>
        public Entities.CodigoPostalColonia GetOne(System.Int32 ClaveCodigoPostal, System.Int32 ClaveColonia, System.Int32 ClaveEstado, System.Int32 ClaveMunicipio, System.Int32 ClaveLocalidad) {
            return Instance().GetOne( ClaveCodigoPostal, ClaveColonia, ClaveEstado, ClaveMunicipio, ClaveLocalidad);
        }

        // GetBy Objects and Params
                                    
        /// <summary>
        /// Get a CodigoPostalColonia  by calling a Stored Procedure
        /// </summary>
        public Entities.CodigoPostalColonia GetOne(IUniqueIdentifiable CodigoPostal, System.Int32 ClaveColonia, System.Int32 ClaveEstado, System.Int32 ClaveMunicipio, System.Int32 ClaveLocalidad)
        {
            return Instance().GetOne(CodigoPostal, ClaveColonia, ClaveEstado, ClaveMunicipio, ClaveLocalidad);
        }   
                        

        

        /// <summary>
        /// Get a CodigoPostalColoniaList by calling a Stored Procedure
        /// </summary>
        public Entities.CodigoPostalColoniaList GetByCodigoPostal(System.Int32 ClaveCodigoPostal)
        {
            return Instance().GetByCodigoPostal(ClaveCodigoPostal);
        }

        /// <summary>
        /// Get a CodigoPostalColoniaList by calling a Stored Procedure
        /// </summary>
        public Entities.CodigoPostalColoniaList GetByCodigoPostal(IUniqueIdentifiable CodigoPostal)
        {
            return Instance().GetByCodigoPostal(CodigoPostal);
        }

    

        /// <summary>
        /// Get a CodigoPostalColoniaList by calling a Stored Procedure
        /// </summary>
        public Entities.CodigoPostalColoniaList GetByColonia(System.Int32 ClaveColonia, System.Int32 ClaveEstado, System.Int32 ClaveMunicipio, System.Int32 ClaveLocalidad)
        {
            return Instance().GetByColonia(ClaveColonia, ClaveEstado, ClaveMunicipio, ClaveLocalidad);
        }

        /// <summary>
        /// Get a CodigoPostalColoniaList by calling a Stored Procedure
        /// </summary>
        public Entities.CodigoPostalColoniaList GetByColonia(IUniqueIdentifiable Colonia)
        {
            return Instance().GetByColonia(Colonia);
        }

    

       

        /// <summary>
        /// Delete children for CodigoPostalColonia
        /// </summary>
        public void DeleteChildren(DbTransaction transaction, CodigoPostalColonia entity)
        {
            Instance().DeleteChildren(transaction, entity);
        }

        

                                    

        /// <summary>
        /// Delete CodigoPostalColonia
        /// </summary>
        public void Delete(IUniqueIdentifiable CodigoPostal, System.Int32 ClaveColonia, System.Int32 ClaveEstado, System.Int32 ClaveMunicipio, System.Int32 ClaveLocalidad)
        {
            Instance().Delete(CodigoPostal, ClaveColonia, ClaveEstado, ClaveMunicipio, ClaveLocalidad);
        }   
                        

        

        /// <summary>
        /// Delete CodigoPostalColonia by CodigoPostal
        /// </summary>
        public void DeleteByCodigoPostal(System.Int32 ClaveCodigoPostal)
        {
            Instance().DeleteByCodigoPostal(ClaveCodigoPostal);
        }

        /// <summary>
        /// Delete CodigoPostalColonia by CodigoPostal
        /// </summary>
        public void DeleteByCodigoPostal(IUniqueIdentifiable CodigoPostal)
        {
            Instance().DeleteByCodigoPostal(CodigoPostal);
        }

    

        /// <summary>
        /// Delete CodigoPostalColonia by Colonia
        /// </summary>
        public void DeleteByColonia(System.Int32 ClaveColonia, System.Int32 ClaveEstado, System.Int32 ClaveMunicipio, System.Int32 ClaveLocalidad)
        {
            Instance().DeleteByColonia(ClaveColonia, ClaveEstado, ClaveMunicipio, ClaveLocalidad);
        }

        /// <summary>
        /// Delete CodigoPostalColonia by Colonia
        /// </summary>
        public void DeleteByColonia(IUniqueIdentifiable Colonia)
        {
            Instance().DeleteByColonia(Colonia);
        }

    
        /// <summary>
        /// Delete CodigoPostalColonia 
        /// </summary>
        public void Delete(System.Int32 ClaveCodigoPostal, System.Int32 ClaveColonia, System.Int32 ClaveEstado, System.Int32 ClaveMunicipio, System.Int32 ClaveLocalidad){
            Instance().Delete(ClaveCodigoPostal, ClaveColonia, ClaveEstado, ClaveMunicipio, ClaveLocalidad);
        }

        /// <summary>
        /// Delete CodigoPostalColonia 
        /// </summary>
        public void Delete(Entities.CodigoPostalColonia entity ){
            Instance().Delete(entity);
        }

        /// <summary>
        /// Save CodigoPostalColonia  
        /// </summary>
        public void Save(Entities.CodigoPostalColonia entity){
            Instance().Save(entity);
        }

        /// <summary>
        /// Insert CodigoPostalColonia 
        /// </summary>
        public void Insert(Entities.CodigoPostalColonia entity){
            Instance().Insert(entity);
        }

        /// <summary>
        /// GetAll CodigoPostalColonia 
        /// </summary>
        public Entities.CodigoPostalColoniaList GetAll(){  
            return Instance().GetAll();
        }

        /// <summary>
        /// Save CodigoPostalColonia 
        /// </summary>
        public void Save(System.Int32 ClaveCodigoPostal, System.Int32 ClaveColonia, System.Int32 ClaveEstado, System.Int32 ClaveMunicipio, System.Int32 ClaveLocalidad){
            Entities.CodigoPostalColonia entity = Instance().GetOne(ClaveCodigoPostal, ClaveColonia, ClaveEstado, ClaveMunicipio, ClaveLocalidad);
            if (entity == null)
                throw new ApplicationException(String.Format("Entity not found. IUniqueIdentifiable Values: {0} = {1}, {2} = {3}, {4} = {5}, {6} = {7}, {8} = {9}", "ClaveCodigoPostal", ClaveCodigoPostal, "ClaveColonia", ClaveColonia, "ClaveEstado", ClaveEstado, "ClaveMunicipio", ClaveMunicipio, "ClaveLocalidad", ClaveLocalidad));

            Instance().Save(entity);
        }

        /// <summary>
        /// Insert CodigoPostalColonia
        /// </summary>
        public void Insert(System.Int32 ClaveCodigoPostal, System.Int32 ClaveColonia, System.Int32 ClaveEstado, System.Int32 ClaveMunicipio, System.Int32 ClaveLocalidad){
            Entities.CodigoPostalColonia entity = new Entities.CodigoPostalColonia();

            entity.ClaveCodigoPostal = ClaveCodigoPostal;
            entity.ClaveColonia = ClaveColonia;
            entity.ClaveEstado = ClaveEstado;
            entity.ClaveMunicipio = ClaveMunicipio;
            entity.ClaveLocalidad = ClaveLocalidad;
            Instance().Insert(entity);
        }


        //Database Queries 
        


    }
}





namespace BSD.C4.Tlaxcala.Sai.Dal.Rules.Loaders
{

    /// <summary>
    /// 
    /// </summary>
    public partial class CodigoPostalColoniaLoader<T> : BaseLoader< T, CodigoPostalColonia, ObjectList<T>>, IGenericGateway where T : CodigoPostalColonia, new()
    {

        #region "Singleton"

        static CodigoPostalColoniaLoader<T> _instance;

        private CodigoPostalColoniaLoader()
        {
        }

        /// <summary>
        /// 
        /// </summary>
        public static CodigoPostalColoniaLoader<T> Instance() {
            if (_instance == null) {
                if (HttpContext.Current == null) 
                    _instance = new CodigoPostalColoniaLoader<T>();
                else {
                    CodigoPostalColoniaLoader<T> inst = HttpContext.Current.Items["BSD.C4.Tlaxcala.Sai.Dal.Rules.CodigoPostalColoniaLoaderSingleton"] as CodigoPostalColoniaLoader<T>;
                    if (inst == null) {
                        inst = new CodigoPostalColoniaLoader<T>();
                        HttpContext.Current.Items.Add("BSD.C4.Tlaxcala.Sai.Dal.Rules.CodigoPostalColoniaLoaderSingleton", inst);
                    }
                    return inst;
                }
            }
            return _instance;
        }


        #endregion

        /// <summary>
        /// 
        /// </summary>
        public string[] GetPKPropertiesNames()
        {
            
            string[] s ={"ClaveCodigoPostal","ClaveColonia","ClaveEstado","ClaveMunicipio","ClaveLocalidad"};
            return s;
        }
        /// <summary>
        /// 
        /// </summary>
        public Type GetMappingType()
        {
            return typeof(CodigoPostalColonia);
        }


        /// <summary>
        /// 
        /// </summary>
        protected override string TableName
        {
            get { return "CodigoPostalColonia"; }
        }

        
        
        /// <summary>
        /// 
        /// </summary>
        protected override void HydrateFields(DbDataReader reader, CodigoPostalColonia entity)
        {
            
            IMappeableCodigoPostalColoniaObject CodigoPostalColonia = (IMappeableCodigoPostalColoniaObject)entity;
            CodigoPostalColonia.HydrateFields(
            reader.GetInt32(0),
reader.GetInt32(1),
reader.GetInt32(2),
reader.GetInt32(3),
reader.GetInt32(4));
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string StoredProceduresPrefix()
        {
            return "up_";
        }


        
    

        

        /// <summary>
        /// Complete the aggregations for this entity. 
        /// </summary>
        protected override void CompleteEntity(T entity)
        {
            
            ((IMappeableCodigoPostalColonia)entity).CompleteEntity();
        }


        



        /// <summary>
        /// Get a CodigoPostalColonia by execute a SQL Query Text
        /// </summary>
        public T GetOneBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectBySQLText(sqlQueryText);
        }

        /// <summary>
        /// Get a CodigoPostalColoniaList by execute a SQL Query Text
        /// </summary>
        public ObjectList<T> GetBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectListBySQLText(sqlQueryText);
        }

        /// <summary>
        /// GetOne By Params
        /// </summary>
        public T GetOne(System.Int32 ClaveCodigoPostal, System.Int32 ClaveColonia, System.Int32 ClaveEstado, System.Int32 ClaveMunicipio, System.Int32 ClaveLocalidad)
        {
            return base.GetObjectByAnyStoredProcedure(StoredProceduresPrefix() + "CodigoPostalColonia_GetOne", ClaveCodigoPostal, ClaveColonia, ClaveEstado, ClaveMunicipio, ClaveLocalidad);
        }


        // GetOne By Objects and Params
                                    
        /// <summary>
        /// 
        /// </summary>
        public T GetOne(IUniqueIdentifiable CodigoPostal, System.Int32 ClaveColonia, System.Int32 ClaveEstado, System.Int32 ClaveMunicipio, System.Int32 ClaveLocalidad)
        {
        return base.GetObjectByAnyStoredProcedure(StoredProceduresPrefix() + "CodigoPostalColonia_GetOne",  UniqueIdentifierHelper.ComposeIdentifier(CodigoPostal, ClaveColonia, ClaveEstado, ClaveMunicipio, ClaveLocalidad));
        }   
                        


        

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByCodigoPostal(DbTransaction transaction, System.Int32 ClaveCodigoPostal)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "CodigoPostalColonia_GetByCodigoPostal", ClaveCodigoPostal);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByCodigoPostal(DbTransaction transaction, IUniqueIdentifiable CodigoPostal)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "CodigoPostalColonia_GetByCodigoPostal", CodigoPostal.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByColonia(DbTransaction transaction, System.Int32 ClaveColonia, System.Int32 ClaveEstado, System.Int32 ClaveMunicipio, System.Int32 ClaveLocalidad)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "CodigoPostalColonia_GetByColonia", ClaveColonia, ClaveEstado, ClaveMunicipio, ClaveLocalidad);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByColonia(DbTransaction transaction, IUniqueIdentifiable Colonia)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "CodigoPostalColonia_GetByColonia", Colonia.Identifier());
        }

    


        

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByCodigoPostal(System.Int32 ClaveCodigoPostal)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "CodigoPostalColonia_GetByCodigoPostal", ClaveCodigoPostal);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByCodigoPostal(IUniqueIdentifiable CodigoPostal)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "CodigoPostalColonia_GetByCodigoPostal", CodigoPostal.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByColonia(System.Int32 ClaveColonia, System.Int32 ClaveEstado, System.Int32 ClaveMunicipio, System.Int32 ClaveLocalidad)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "CodigoPostalColonia_GetByColonia", ClaveColonia, ClaveEstado, ClaveMunicipio, ClaveLocalidad);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByColonia(IUniqueIdentifiable Colonia)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "CodigoPostalColonia_GetByColonia", Colonia.Identifier());
        }

    

        //Database Queries 
        



        #region IGenericGateway

        object IGenericGateway.GetOne(IUniqueIdentifiable identifier)
        {
            return base.GetOne(identifier);
        }

        object IGenericGateway.GetAll()
        {
            return base.GetAll();
        }

        object IGenericGateway.GetByParent(IUniqueIdentifiable parentEntity)
        {
            return base.GetByParent(parentEntity);
        }

        #endregion

    }
}





