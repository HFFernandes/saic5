
        
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 8/30/2009 - 1:47 PM
// This is a partial class file. The other one is RoboAccesoriosEntity.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using BSD.C4.Tlaxcala.Sai.Dal.Rules.Objects;



using Cooperator.Framework.Core;
using Cooperator.Framework.Core.LazyLoad;
using System;

namespace BSD.C4.Tlaxcala.Sai.Dal.Rules.Entities
{

    /// <summary>
    /// 
    /// </summary>
    public partial class RoboAccesorios : Objects.RoboAccesoriosObject, IMappeableRoboAccesorios, IEquatable<RoboAccesorios>, ICloneable
    {

        #region "Ctor"

        /// <summary>
        /// 
        /// </summary>
        public RoboAccesorios()
            :base()
        {
            if (_IncidenciaEntity == null) _IncidenciaEntity = new Objects.IncidenciaObject();

        }

        /// <summary>
        /// 
        /// </summary>
        public RoboAccesorios(
			System.Int32 IdRoboAccesorio)
            : base()
        {

			_IdRoboAccesorio = IdRoboAccesorio;

            if (_IncidenciaEntity == null) _IncidenciaEntity = new Objects.IncidenciaObject();

            Initialized();
        }

        

        /// <summary>
        /// 
        /// </summary>
        public RoboAccesorios(
			System.Int32 IdRoboAccesorio,
			System.String PersonaPercato,
			System.Nullable<System.DateTime> FechaPercato,
			System.String DescripcionResponsable,
			System.Int32 IdIncidencia)
            : base()
        {

			_IdRoboAccesorio = IdRoboAccesorio;
			_PersonaPercato = PersonaPercato;
			_FechaPercato = FechaPercato;
			_DescripcionResponsable = DescripcionResponsable;
			_IdIncidencia = IdIncidencia;

            if (_IncidenciaEntity == null) _IncidenciaEntity = new Objects.IncidenciaObject();

            Initialized();
        }
        
        #endregion

        #region "Fields"

        /// <summary>
/// 
/// </summary>
protected Objects.IncidenciaObject _IncidenciaEntity;

        #endregion

        #region "Properties"
        
bool _IncidenciaEntityFetched;

        /// <summary>
        /// 
        /// </summary>
        public virtual Objects.IncidenciaObject IncidenciaEntity
        {
            get
            {
                if (_IncidenciaEntity== null  && ! _IncidenciaEntityFetched ) {
_IncidenciaEntityFetched = true;
Objects.IncidenciaObject _IncidenciaEntityTemp = new Objects.IncidenciaObject(this.IdIncidencia); 
ILazyProvider lazyProvider = LazyProviderFactory.Get(typeof(Objects.IncidenciaObject));
 _IncidenciaEntity = lazyProvider.GetEntity(typeof(Objects.IncidenciaObject), _IncidenciaEntityTemp) as Objects.IncidenciaObject;
}

                return _IncidenciaEntity;
            }
            set
            {
                base.PropertyModified();
                _IncidenciaEntity = value;
                if (value != null) {
   _IdIncidencia = value.Folio;

} else {
   _IdIncidencia = System.Int32.MinValue;

}

            }
        }
        
        #endregion

        /// <summary>
        /// Returns de original value of entity since was created or restored.
        /// </summary>
        public new RoboAccesorios OriginalValue()
        {
            return (RoboAccesorios)base.OriginalValue();
        }

        /// <summary>
        /// 
        /// </summary>
        object ICloneable.Clone()
        {
            RoboAccesorios newObject;            
            

            newObject = (RoboAccesorios)this.MemberwiseClone();
            // Entities
                         
            if (this._IncidenciaEntity != null)
            {
                newObject._IncidenciaEntity = (Objects.IncidenciaObject)((ICloneable)this._IncidenciaEntity).Clone();
            }
            
            // Colections
            
            // OriginalValue
            RoboAccesorios newOriginalValue;
            if (base._OriginalValue != null)
            {
                newOriginalValue = (RoboAccesorios)this.OriginalValue().MemberwiseClone();
                // Entities
                             
                if (this.OriginalValue()._IncidenciaEntity != null)
                {
                    newOriginalValue._IncidenciaEntity = (Objects.IncidenciaObject)((ICloneable)this.OriginalValue()._IncidenciaEntity).Clone();
                }
                
                // Colections
                            
                newObject._OriginalValue = newOriginalValue;

            }
            return newObject;            
        }



        /// <summary>
        /// 
        /// </summary>
        void IMappeableRoboAccesorios.CompleteEntity(Objects.IncidenciaObject IncidenciaEntity)
        {
        _IncidenciaEntity = IncidenciaEntity;
        }
        
        bool IMappeableRoboAccesorios.IsIncidenciaEntityNull()
        {
            return (_IncidenciaEntity == null);
        }
        

        /// <summary>
        /// 
        /// </summary>
        void IMappeableRoboAccesorios.SetFKValuesForChilds(RoboAccesorios entity)
        {
                
        }

        /// <summary>
        /// 
        /// </summary>
        public bool Equals(RoboAccesorios other)
        {
            return UniqueIdentifierHelper.IsSameObject((IUniqueIdentifiable)this, (IUniqueIdentifiable)other);
        } 

    }

    /// <summary>
    /// 
    /// </summary>
    public interface IMappeableRoboAccesorios
    {
        /// <summary>
        /// 
        /// </summary>
        void CompleteEntity(Objects.IncidenciaObject IncidenciaEntity);
        
        /// <summary>
        /// 
        /// </summary>
        bool IsIncidenciaEntityNull();
        
        /// <summary>
        /// 
        /// </summary>
        void SetFKValuesForChilds(RoboAccesorios entity);
    }

        /// <summary>
        /// 
        /// </summary>
    public partial class RoboAccesoriosList : ObjectList<RoboAccesorios>
    {
    }
}
namespace BSD.C4.Tlaxcala.Sai.Dal.Rules.Views
{
        /// <summary>
        /// 
        /// </summary>
    public partial class RoboAccesoriosListView
        : ObjectListView<Entities.RoboAccesorios>
    {
        /// <summary>
        /// 
        /// </summary>
        public RoboAccesoriosListView(Entities.RoboAccesoriosList list): base(list)
        {
        }
    }
}


