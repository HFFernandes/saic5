
        
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 8/30/2009 - 1:47 PM
// This is a partial class file. The other one is RoboAccesoriosObject.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using Cooperator.Framework.Core;
using System;

namespace BSD.C4.Tlaxcala.Sai.Dal.Rules.Objects
{
    /// <summary>
    /// 
    /// </summary>
    public partial class RoboAccesoriosObject : BaseObject, IMappeableRoboAccesoriosObject, IUniqueIdentifiable, IEquatable<RoboAccesoriosObject>, ICloneable
    {

        #region "Ctor"

        /// <summary>
        /// 
        /// </summary>
        public RoboAccesoriosObject(): base()
        {

			_IdRoboAccesorio =  ValuesGenerator.GetInt32;

        }

        /// <summary>
        /// 
        /// </summary>
        public RoboAccesoriosObject(
			System.Int32 IdRoboAccesorio): base()
        {

			_IdRoboAccesorio = IdRoboAccesorio;

            Initialized();
        }

        
        /// <summary>
        /// 
        /// </summary>
        public RoboAccesoriosObject(
			System.Int32 IdRoboAccesorio,
			System.String PersonaPercato,
			System.Nullable<System.DateTime> FechaPercato,
			System.String DescripcionResponsable,
			System.Int32 IdIncidencia): base()
        {

			_IdRoboAccesorio = IdRoboAccesorio;
			_PersonaPercato = PersonaPercato;
			_FechaPercato = FechaPercato;
			_DescripcionResponsable = DescripcionResponsable;
			_IdIncidencia = IdIncidencia;

            Initialized();
        }
        

        #endregion

        #region "Events"
        
        
        #endregion

        #region "Fields"

            /// <summary>
/// 
/// </summary>
protected System.Int32 _IdRoboAccesorio;
/// <summary>
/// 
/// </summary>
protected System.String _PersonaPercato;
/// <summary>
///
/// </summary>
protected System.Nullable<System.DateTime> _FechaPercato;
/// <summary>
/// 
/// </summary>
protected System.String _DescripcionResponsable;
/// <summary>
/// 
/// </summary>
protected System.Int32 _IdIncidencia;

        #endregion

        #region "Properties"
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.Int32 IdRoboAccesorio
        {
            get
            {
                return _IdRoboAccesorio;
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String PersonaPercato
        {
            get
            {
                return _PersonaPercato;
            }
            
            set
            {
                base.PropertyModified();
                _PersonaPercato = value;
                
            }
            
        }
        
        /// <summary>
        /// Nullable property
        /// </summary>
        public virtual System.Nullable<System.DateTime> FechaPercato
        {
            get
            {
                return _FechaPercato;
            }
            
            set
            {
                base.PropertyModified();
                _FechaPercato = value;                
                
            }
            
        }
                
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String DescripcionResponsable
        {
            get
            {
                return _DescripcionResponsable;
            }
            
            set
            {
                base.PropertyModified();
                _DescripcionResponsable = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.Int32 IdIncidencia
        {
            get
            {
                return _IdIncidencia;
            }
            
            set
            {
                base.PropertyModified();
                _IdIncidencia = value;
                
            }
            
        }
        
        #endregion

        
            
                
        /// <summary>
        /// 
        /// </summary>
        protected override void SetOriginalValue()
        {
            base._OriginalValue = (IObject) this.MemberwiseClone();
        }

        /// <summary>
        /// 
        /// </summary>
        object ICloneable.Clone()
        {
            RoboAccesoriosObject newObject;
            RoboAccesoriosObject newOriginalValue;

            newObject = (RoboAccesoriosObject) this.MemberwiseClone();
            if (base._OriginalValue != null)
            {
                newOriginalValue = (RoboAccesoriosObject)this.OriginalValue().MemberwiseClone();
                newObject._OriginalValue = newOriginalValue;
            }
            return newObject;
        }


        /// <summary>
        /// Returns de original value of object since was created or restored.
        /// </summary>
        public new RoboAccesoriosObject OriginalValue()
        {
            return (RoboAccesoriosObject)base.OriginalValue();
        }


        /// <summary>
        /// 
        /// </summary>
        void IMappeableRoboAccesoriosObject.HydrateFields(
			System.Int32 IdRoboAccesorio,
			System.String PersonaPercato,
			System.Nullable<System.DateTime> FechaPercato,
			System.String DescripcionResponsable,
			System.Int32 IdIncidencia)
        {
        _IdRoboAccesorio = IdRoboAccesorio;
_PersonaPercato = PersonaPercato;
_FechaPercato = FechaPercato;
_DescripcionResponsable = DescripcionResponsable;
_IdIncidencia = IdIncidencia;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeableRoboAccesoriosObject.GetFieldsForInsert()
        {
            object[] _myArray = new object[5];
            _myArray[0] = _IdRoboAccesorio;
if (!System.String.IsNullOrEmpty(_PersonaPercato)) _myArray[1] = _PersonaPercato;
if (_FechaPercato.HasValue) _myArray[2] = _FechaPercato.Value;
if (!System.String.IsNullOrEmpty(_DescripcionResponsable)) _myArray[3] = _DescripcionResponsable;
_myArray[4] = _IdIncidencia;

            return _myArray;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeableRoboAccesoriosObject.GetFieldsForUpdate()
        {
            
            object[] _myArray = new object[5];
            _myArray[0] = _IdRoboAccesorio;
if (!System.String.IsNullOrEmpty(_PersonaPercato)) _myArray[1] = _PersonaPercato;
if (_FechaPercato.HasValue) _myArray[2] = _FechaPercato.Value;
if (!System.String.IsNullOrEmpty(_DescripcionResponsable)) _myArray[3] = _DescripcionResponsable;
_myArray[4] = _IdIncidencia;

            return _myArray;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeableRoboAccesoriosObject.GetFieldsForDelete()
        {
            
            object[] _myArray = new object[1];
            _myArray[0] = _IdRoboAccesorio;

            return _myArray;
        }


        /// <summary>
        /// 
        /// </summary>
        void IMappeableRoboAccesoriosObject.UpdateObjectFromOutputParams(object[] parameters){
            // Update properties from Output parameters
            _IdRoboAccesorio = (System.Int32) parameters[0];

        }


        /// <summary>
        /// 
        /// </summary>
        object[] IUniqueIdentifiable.Identifier()
        {
            RoboAccesoriosObject o = null;
            if (ObjectStateHelper.IsModified(this))
                o = this.OriginalValue();
            else
                o = this;

            return new object[]
            {o.IdRoboAccesorio};
        }


        /// <summary>
        /// 
        /// </summary>
        public bool Equals(RoboAccesoriosObject other)
        {
            return UniqueIdentifierHelper.IsSameObject((IUniqueIdentifiable)this, (IUniqueIdentifiable)other);
        }

    }

    /// <summary>
    /// 
    /// </summary>
    public interface IMappeableRoboAccesoriosObject
    {
        /// <summary>
        /// 
        /// </summary>
        void HydrateFields(System.Int32 IdRoboAccesorio, 
			System.String PersonaPercato, 
			System.Nullable<System.DateTime> FechaPercato, 
			System.String DescripcionResponsable, 
			System.Int32 IdIncidencia);

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForInsert();

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForUpdate();

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForDelete();

        /// <summary>
        /// 
        /// </summary>
        void UpdateObjectFromOutputParams(object[] parameters);
    }

    /// <summary>
    /// 
    /// </summary>
    public partial class RoboAccesoriosObjectList : ObjectList<RoboAccesoriosObject>
    {
    }
}

namespace BSD.C4.Tlaxcala.Sai.Dal.Rules.Views
{
    /// <summary>
    /// 
    /// </summary>
    public partial class RoboAccesoriosObjectListView
        : ObjectListView<Objects.RoboAccesoriosObject>
    {
        /// <summary>
        /// 
        /// </summary>
        public RoboAccesoriosObjectListView(Objects.RoboAccesoriosObjectList list): base(list)
        {
        }
    }
}


