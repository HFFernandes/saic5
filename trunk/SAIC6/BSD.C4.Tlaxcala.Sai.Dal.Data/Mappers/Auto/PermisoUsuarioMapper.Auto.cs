
        
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 10/08/2009 - 08:53 p.m.
// This is a partial class file. The other one is PermisoUsuarioMapper.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using System;
using BSD.C4.Tlaxcala.Sai.Dal.Rules.Entities;
using BSD.C4.Tlaxcala.Sai.Dal.Rules.Objects;
using Cooperator.Framework.Data;
using Cooperator.Framework.Data.Exceptions;
using Cooperator.Framework.Core;
using System.Data.Common;
using System.Reflection;
using System.Web;
using System.Data;

namespace BSD.C4.Tlaxcala.Sai.Dal.Rules.Mappers
{

    
    /// <summary>
    /// 
    /// </summary>
    public partial class PermisoUsuarioMapper : BaseGateway<PermisoUsuarioObject, PermisoUsuarioObjectList>, IGenericGateway
    {


        #region "Singleton"

        static PermisoUsuarioMapper _instance;

        private PermisoUsuarioMapper()
        {
        }

        /// <summary>
        /// 
        /// </summary>
        public static PermisoUsuarioMapper Instance() {
            if (_instance == null) {
                if (HttpContext.Current == null) 
                    _instance = new PermisoUsuarioMapper();
                else {
                    PermisoUsuarioMapper inst = HttpContext.Current.Items["BSD.C4.Tlaxcala.Sai.Dal.Rules.PermisoUsuarioMapperSingleton"] as PermisoUsuarioMapper;
                    if (inst == null) {
                        inst = new PermisoUsuarioMapper();
                        HttpContext.Current.Items.Add("BSD.C4.Tlaxcala.Sai.Dal.Rules.PermisoUsuarioMapperSingleton", inst);
                    }
                    return inst;
                }
            }
            return _instance;
        }


        #endregion

        /// <summary>
        /// 
        /// </summary>
        public string[] GetPKPropertiesNames()
        {
            
            string[] s ={"ClaveUsuario","ClaveSubmodulo","ClavePermiso","ClaveSistema"};
            return s;
        }
        /// <summary>
        /// 
        /// </summary>
        public Type GetMappingType()
        {
            return typeof(PermisoUsuarioObject);
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string TableName
        {
            get { return "PermisoUsuario"; }
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string RuleName
        {
            get {return typeof(PermisoUsuarioMapper).FullName;}
        }


        

        /// <summary>
        /// 
        /// </summary>
        protected override void HydrateFields(DbDataReader reader, PermisoUsuarioObject entity)
        {
            
            IMappeablePermisoUsuarioObject PermisoUsuario = (IMappeablePermisoUsuarioObject)entity;
            PermisoUsuario.HydrateFields(
            reader.GetInt32(0),
reader.GetInt32(1),
reader.GetInt32(2),
reader.GetInt32(3));
        }

        /// <summary>
        /// 
        /// </summary>
        protected override object[] GetFieldsForInsert(PermisoUsuarioObject entity)
        {

            IMappeablePermisoUsuarioObject PermisoUsuario = (IMappeablePermisoUsuarioObject)entity;
            return PermisoUsuario.GetFieldsForInsert();
        }

        /// <summary>
        /// 
        /// </summary>
        protected override object[] GetFieldsForUpdate(PermisoUsuarioObject entity)
        {

            IMappeablePermisoUsuarioObject PermisoUsuario = (IMappeablePermisoUsuarioObject)entity;
            return PermisoUsuario.GetFieldsForUpdate();
        }

        /// <summary>
        /// 
        /// </summary>
        protected override object[] GetFieldsForDelete(PermisoUsuarioObject entity)
        {

            IMappeablePermisoUsuarioObject PermisoUsuario = (IMappeablePermisoUsuarioObject)entity;
            return PermisoUsuario.GetFieldsForDelete();
        }


        /// <summary>
        /// Raised after insert and update
        /// </summary>
        protected override void UpdateObjectFromOutputParams(PermisoUsuarioObject entity, object[] parameters)
        {
            // Update properties from Output parameters
            ((IMappeablePermisoUsuarioObject) entity).UpdateObjectFromOutputParams(parameters);
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string StoredProceduresPrefix()
        {
            return "us_";
        }


          





        /// <summary>
        /// Get a PermisoUsuarioObject by execute a SQL Query Text
        /// </summary>
        public PermisoUsuarioObject GetOneBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectBySQLText(sqlQueryText);
        }

        /// <summary>
        /// Get a PermisoUsuarioObjectList by execute a SQL Query Text
        /// </summary>
        public PermisoUsuarioObjectList GetBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectListBySQLText(sqlQueryText);
        }


        /// <summary>
        /// 
        /// </summary>
        public PermisoUsuarioObject GetOne(System.Int32 ClaveUsuario, System.Int32 ClaveSubmodulo, System.Int32 ClavePermiso, System.Int32 ClaveSistema)
        {
            return base.GetOne(new PermisoUsuarioObject(ClaveUsuario, ClaveSubmodulo, ClavePermiso, ClaveSistema));
        }


        // GetOne By Objects and Params
            


        

        /// <summary>
        /// 
        /// </summary>
        public PermisoUsuarioObjectList GetByPermiso(DbTransaction transaction, System.Int32 ClavePermiso)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "PermisoUsuario_GetByPermiso", ClavePermiso);
        }

        /// <summary>
        /// 
        /// </summary>
        public PermisoUsuarioObjectList GetByPermiso(DbTransaction transaction, IUniqueIdentifiable Permiso)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "PermisoUsuario_GetByPermiso", Permiso.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public PermisoUsuarioObjectList GetBySistema(DbTransaction transaction, System.Int32 ClaveSistema)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "PermisoUsuario_GetBySistema", ClaveSistema);
        }

        /// <summary>
        /// 
        /// </summary>
        public PermisoUsuarioObjectList GetBySistema(DbTransaction transaction, IUniqueIdentifiable Sistema)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "PermisoUsuario_GetBySistema", Sistema.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public PermisoUsuarioObjectList GetBySubmodulo(DbTransaction transaction, System.Int32 ClaveSubmodulo)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "PermisoUsuario_GetBySubmodulo", ClaveSubmodulo);
        }

        /// <summary>
        /// 
        /// </summary>
        public PermisoUsuarioObjectList GetBySubmodulo(DbTransaction transaction, IUniqueIdentifiable Submodulo)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "PermisoUsuario_GetBySubmodulo", Submodulo.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public PermisoUsuarioObjectList GetByUsuario(DbTransaction transaction, System.Int32 ClaveUsuario)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "PermisoUsuario_GetByUsuario", ClaveUsuario);
        }

        /// <summary>
        /// 
        /// </summary>
        public PermisoUsuarioObjectList GetByUsuario(DbTransaction transaction, IUniqueIdentifiable Usuario)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "PermisoUsuario_GetByUsuario", Usuario.Identifier());
        }

    


        

        /// <summary>
        /// 
        /// </summary>
        public PermisoUsuarioObjectList GetByPermiso(System.Int32 ClavePermiso)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "PermisoUsuario_GetByPermiso", ClavePermiso);
        }

        /// <summary>
        /// 
        /// </summary>
        public PermisoUsuarioObjectList GetByPermiso(IUniqueIdentifiable Permiso)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "PermisoUsuario_GetByPermiso", Permiso.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public PermisoUsuarioObjectList GetBySistema(System.Int32 ClaveSistema)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "PermisoUsuario_GetBySistema", ClaveSistema);
        }

        /// <summary>
        /// 
        /// </summary>
        public PermisoUsuarioObjectList GetBySistema(IUniqueIdentifiable Sistema)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "PermisoUsuario_GetBySistema", Sistema.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public PermisoUsuarioObjectList GetBySubmodulo(System.Int32 ClaveSubmodulo)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "PermisoUsuario_GetBySubmodulo", ClaveSubmodulo);
        }

        /// <summary>
        /// 
        /// </summary>
        public PermisoUsuarioObjectList GetBySubmodulo(IUniqueIdentifiable Submodulo)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "PermisoUsuario_GetBySubmodulo", Submodulo.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public PermisoUsuarioObjectList GetByUsuario(System.Int32 ClaveUsuario)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "PermisoUsuario_GetByUsuario", ClaveUsuario);
        }

        /// <summary>
        /// 
        /// </summary>
        public PermisoUsuarioObjectList GetByUsuario(IUniqueIdentifiable Usuario)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "PermisoUsuario_GetByUsuario", Usuario.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public void Delete(System.Int32 ClaveUsuario, System.Int32 ClaveSubmodulo, System.Int32 ClavePermiso, System.Int32 ClaveSistema)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "PermisoUsuario_Delete", ClaveUsuario, ClaveSubmodulo, ClavePermiso, ClaveSistema);
        }

        /// <summary>
        /// 
        /// </summary>
        public void Delete(DbTransaction transaction, System.Int32 ClaveUsuario, System.Int32 ClaveSubmodulo, System.Int32 ClavePermiso, System.Int32 ClaveSistema)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "PermisoUsuario_Delete", ClaveUsuario, ClaveSubmodulo, ClavePermiso, ClaveSistema);
        }


        // Delete By Objects and Params
            



        

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByPermiso(System.Int32 ClavePermiso)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "PermisoUsuario_DeleteByPermiso", ClavePermiso);
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByPermiso(DbTransaction transaction, System.Int32 ClavePermiso)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "PermisoUsuario_DeleteByPermiso", ClavePermiso);
        }


        /// <summary>
        /// 
        /// </summary>
        public void DeleteByPermiso(IUniqueIdentifiable Permiso)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "PermisoUsuario_DeleteByPermiso", Permiso.Identifier());
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByPermiso(DbTransaction transaction, IUniqueIdentifiable Permiso)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "PermisoUsuario_DeleteByPermiso", Permiso.Identifier());
        }


    

        /// <summary>
        /// 
        /// </summary>
        public void DeleteBySistema(System.Int32 ClaveSistema)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "PermisoUsuario_DeleteBySistema", ClaveSistema);
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteBySistema(DbTransaction transaction, System.Int32 ClaveSistema)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "PermisoUsuario_DeleteBySistema", ClaveSistema);
        }


        /// <summary>
        /// 
        /// </summary>
        public void DeleteBySistema(IUniqueIdentifiable Sistema)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "PermisoUsuario_DeleteBySistema", Sistema.Identifier());
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteBySistema(DbTransaction transaction, IUniqueIdentifiable Sistema)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "PermisoUsuario_DeleteBySistema", Sistema.Identifier());
        }


    

        /// <summary>
        /// 
        /// </summary>
        public void DeleteBySubmodulo(System.Int32 ClaveSubmodulo)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "PermisoUsuario_DeleteBySubmodulo", ClaveSubmodulo);
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteBySubmodulo(DbTransaction transaction, System.Int32 ClaveSubmodulo)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "PermisoUsuario_DeleteBySubmodulo", ClaveSubmodulo);
        }


        /// <summary>
        /// 
        /// </summary>
        public void DeleteBySubmodulo(IUniqueIdentifiable Submodulo)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "PermisoUsuario_DeleteBySubmodulo", Submodulo.Identifier());
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteBySubmodulo(DbTransaction transaction, IUniqueIdentifiable Submodulo)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "PermisoUsuario_DeleteBySubmodulo", Submodulo.Identifier());
        }


    

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByUsuario(System.Int32 ClaveUsuario)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "PermisoUsuario_DeleteByUsuario", ClaveUsuario);
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByUsuario(DbTransaction transaction, System.Int32 ClaveUsuario)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "PermisoUsuario_DeleteByUsuario", ClaveUsuario);
        }


        /// <summary>
        /// 
        /// </summary>
        public void DeleteByUsuario(IUniqueIdentifiable Usuario)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "PermisoUsuario_DeleteByUsuario", Usuario.Identifier());
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByUsuario(DbTransaction transaction, IUniqueIdentifiable Usuario)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "PermisoUsuario_DeleteByUsuario", Usuario.Identifier());
        }


    


        //Database Queries 
        


        #region IGenericGateway

        object IGenericGateway.GetOne(IUniqueIdentifiable identifier)
        {
            return base.GetOne(identifier);
        }

        object IGenericGateway.GetAll()
        {
            return base.GetAll();
        }

        object IGenericGateway.GetByParent(IUniqueIdentifiable parentEntity)
        {
            return base.GetByParent(parentEntity);
        }

        #endregion


    }


}

namespace BSD.C4.Tlaxcala.Sai.Dal.Rules.Wrappers
{
    /// <summary>
    /// 
    /// </summary>
    public class PermisoUsuarioMapperWrapper
    {

        /// <summary>
        /// 
        /// </summary>
        public string[] GetPKPropertiesNames()
        {
            return Instance().GetPKPropertiesNames();
        }
        /// <summary>
        /// 
        /// </summary>
        public Type GetMappingType()
        {
            return Instance().GetMappingType();
        }



        /// <summary>
        /// 
        /// </summary>
        public BSD.C4.Tlaxcala.Sai.Dal.Rules.Mappers.PermisoUsuarioMapper Instance()
        {
            return BSD.C4.Tlaxcala.Sai.Dal.Rules.Mappers.PermisoUsuarioMapper.Instance(); 
        }
        
        /// <summary>
        /// Get a PermisoUsuarioEntity by calling a Stored Procedure
        /// </summary>
        public Objects.PermisoUsuarioObject GetOne(System.Int32 ClaveUsuario, System.Int32 ClaveSubmodulo, System.Int32 ClavePermiso, System.Int32 ClaveSistema) {
            return Instance().GetOne( ClaveUsuario, ClaveSubmodulo, ClavePermiso, ClaveSistema);
        }

        // GetBy Objects and Params
            

        

        /// <summary>
        /// Get a PermisoUsuarioObjectList by calling a Stored Procedure
        /// </summary>
        public Objects.PermisoUsuarioObjectList GetByPermiso(System.Int32 ClavePermiso)
        {
            return Instance().GetByPermiso(ClavePermiso);
        }

        /// <summary>
        /// Get a PermisoUsuarioObjectList by calling a Stored Procedure
        /// </summary>
        public Objects.PermisoUsuarioObjectList GetByPermiso(IUniqueIdentifiable Permiso)
        {
            return Instance().GetByPermiso(Permiso);
        }

    

        /// <summary>
        /// Get a PermisoUsuarioObjectList by calling a Stored Procedure
        /// </summary>
        public Objects.PermisoUsuarioObjectList GetBySistema(System.Int32 ClaveSistema)
        {
            return Instance().GetBySistema(ClaveSistema);
        }

        /// <summary>
        /// Get a PermisoUsuarioObjectList by calling a Stored Procedure
        /// </summary>
        public Objects.PermisoUsuarioObjectList GetBySistema(IUniqueIdentifiable Sistema)
        {
            return Instance().GetBySistema(Sistema);
        }

    

        /// <summary>
        /// Get a PermisoUsuarioObjectList by calling a Stored Procedure
        /// </summary>
        public Objects.PermisoUsuarioObjectList GetBySubmodulo(System.Int32 ClaveSubmodulo)
        {
            return Instance().GetBySubmodulo(ClaveSubmodulo);
        }

        /// <summary>
        /// Get a PermisoUsuarioObjectList by calling a Stored Procedure
        /// </summary>
        public Objects.PermisoUsuarioObjectList GetBySubmodulo(IUniqueIdentifiable Submodulo)
        {
            return Instance().GetBySubmodulo(Submodulo);
        }

    

        /// <summary>
        /// Get a PermisoUsuarioObjectList by calling a Stored Procedure
        /// </summary>
        public Objects.PermisoUsuarioObjectList GetByUsuario(System.Int32 ClaveUsuario)
        {
            return Instance().GetByUsuario(ClaveUsuario);
        }

        /// <summary>
        /// Get a PermisoUsuarioObjectList by calling a Stored Procedure
        /// </summary>
        public Objects.PermisoUsuarioObjectList GetByUsuario(IUniqueIdentifiable Usuario)
        {
            return Instance().GetByUsuario(Usuario);
        }

    

       

            

        

        /// <summary>
        /// Delete PermisoUsuario by Permiso
        /// </summary>
        public void DeleteByPermiso(System.Int32 ClavePermiso)
        {
            Instance().DeleteByPermiso(ClavePermiso);
        }

        /// <summary>
        /// Delete PermisoUsuarioObject by Permiso
        /// </summary>
        public void DeleteByPermiso(IUniqueIdentifiable Permiso)
        {
            Instance().DeleteByPermiso(Permiso);
        }

    

        /// <summary>
        /// Delete PermisoUsuario by Sistema
        /// </summary>
        public void DeleteBySistema(System.Int32 ClaveSistema)
        {
            Instance().DeleteBySistema(ClaveSistema);
        }

        /// <summary>
        /// Delete PermisoUsuarioObject by Sistema
        /// </summary>
        public void DeleteBySistema(IUniqueIdentifiable Sistema)
        {
            Instance().DeleteBySistema(Sistema);
        }

    

        /// <summary>
        /// Delete PermisoUsuario by Submodulo
        /// </summary>
        public void DeleteBySubmodulo(System.Int32 ClaveSubmodulo)
        {
            Instance().DeleteBySubmodulo(ClaveSubmodulo);
        }

        /// <summary>
        /// Delete PermisoUsuarioObject by Submodulo
        /// </summary>
        public void DeleteBySubmodulo(IUniqueIdentifiable Submodulo)
        {
            Instance().DeleteBySubmodulo(Submodulo);
        }

    

        /// <summary>
        /// Delete PermisoUsuario by Usuario
        /// </summary>
        public void DeleteByUsuario(System.Int32 ClaveUsuario)
        {
            Instance().DeleteByUsuario(ClaveUsuario);
        }

        /// <summary>
        /// Delete PermisoUsuarioObject by Usuario
        /// </summary>
        public void DeleteByUsuario(IUniqueIdentifiable Usuario)
        {
            Instance().DeleteByUsuario(Usuario);
        }

    
        /// <summary>
        /// Delete PermisoUsuario 
        /// </summary>
        public void Delete(System.Int32 ClaveUsuario, System.Int32 ClaveSubmodulo, System.Int32 ClavePermiso, System.Int32 ClaveSistema){
            Instance().Delete(ClaveUsuario, ClaveSubmodulo, ClavePermiso, ClaveSistema);
        }

        /// <summary>
        /// Delete PermisoUsuarioObject 
        /// </summary>
        public void Delete(Objects.PermisoUsuarioObject entity ){
            Instance().Delete(entity);
        }

        /// <summary>
        /// Save PermisoUsuarioObject  
        /// </summary>
        public void Save(Objects.PermisoUsuarioObject entity){
            Instance().Save(entity);
        }

        /// <summary>
        /// Insert PermisoUsuarioObject 
        /// </summary>
        public void Insert(Objects.PermisoUsuarioObject entity){
            Instance().Insert(entity);
        }

        /// <summary>
        /// GetAll PermisoUsuarioObject 
        /// </summary>
        public Objects.PermisoUsuarioObjectList GetAll(){  
            return Instance().GetAll();
        }

        /// <summary>
        /// Save PermisoUsuario 
        /// </summary>
        public void Save(System.Int32 ClaveUsuario, System.Int32 ClaveSubmodulo, System.Int32 ClavePermiso, System.Int32 ClaveSistema){
            Objects.PermisoUsuarioObject entity = Instance().GetOne(ClaveUsuario, ClaveSubmodulo, ClavePermiso, ClaveSistema);
            if (entity == null)
                throw new ApplicationException(String.Format("Entity not found. IUniqueIdentifiable Values: {0} = {1}, {2} = {3}, {4} = {5}, {6} = {7}", "ClaveUsuario", ClaveUsuario, "ClaveSubmodulo", ClaveSubmodulo, "ClavePermiso", ClavePermiso, "ClaveSistema", ClaveSistema));

            Instance().Save(entity);
        }

        /// <summary>
        /// Insert PermisoUsuarioObject
        /// </summary>
        public void Insert(System.Int32 ClaveUsuario, System.Int32 ClaveSubmodulo, System.Int32 ClavePermiso, System.Int32 ClaveSistema){
            Objects.PermisoUsuarioObject entity = new Objects.PermisoUsuarioObject();

            entity.ClaveUsuario = ClaveUsuario;
            entity.ClaveSubmodulo = ClaveSubmodulo;
            entity.ClavePermiso = ClavePermiso;
            entity.ClaveSistema = ClaveSistema;
            Instance().Insert(entity);
        }


        //Database Queries 
        


    }
}





namespace BSD.C4.Tlaxcala.Sai.Dal.Rules.Loaders
{

    /// <summary>
    /// 
    /// </summary>
    public partial class PermisoUsuarioLoader<T> : BaseLoader< T, PermisoUsuarioObject, ObjectList<T>>, IGenericGateway where T : PermisoUsuarioObject, new()
    {

        #region "Singleton"

        static PermisoUsuarioLoader<T> _instance;

        private PermisoUsuarioLoader()
        {
        }

        /// <summary>
        /// 
        /// </summary>
        public static PermisoUsuarioLoader<T> Instance() {
            if (_instance == null) {
                if (HttpContext.Current == null) 
                    _instance = new PermisoUsuarioLoader<T>();
                else {
                    PermisoUsuarioLoader<T> inst = HttpContext.Current.Items["BSD.C4.Tlaxcala.Sai.Dal.Rules.PermisoUsuarioLoaderSingleton"] as PermisoUsuarioLoader<T>;
                    if (inst == null) {
                        inst = new PermisoUsuarioLoader<T>();
                        HttpContext.Current.Items.Add("BSD.C4.Tlaxcala.Sai.Dal.Rules.PermisoUsuarioLoaderSingleton", inst);
                    }
                    return inst;
                }
            }
            return _instance;
        }


        #endregion

        /// <summary>
        /// 
        /// </summary>
        public string[] GetPKPropertiesNames()
        {
            
            string[] s ={"ClaveUsuario","ClaveSubmodulo","ClavePermiso","ClaveSistema"};
            return s;
        }
        /// <summary>
        /// 
        /// </summary>
        public Type GetMappingType()
        {
            return typeof(PermisoUsuarioObject);
        }


        /// <summary>
        /// 
        /// </summary>
        protected override string TableName
        {
            get { return "PermisoUsuario"; }
        }

        
        
        /// <summary>
        /// 
        /// </summary>
        protected override void HydrateFields(DbDataReader reader, PermisoUsuarioObject entity)
        {
            
            IMappeablePermisoUsuarioObject PermisoUsuario = (IMappeablePermisoUsuarioObject)entity;
            PermisoUsuario.HydrateFields(
            reader.GetInt32(0),
reader.GetInt32(1),
reader.GetInt32(2),
reader.GetInt32(3));
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string StoredProceduresPrefix()
        {
            return "us_";
        }


        



        /// <summary>
        /// Get a PermisoUsuario by execute a SQL Query Text
        /// </summary>
        public T GetOneBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectBySQLText(sqlQueryText);
        }

        /// <summary>
        /// Get a PermisoUsuarioList by execute a SQL Query Text
        /// </summary>
        public ObjectList<T> GetBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectListBySQLText(sqlQueryText);
        }

        /// <summary>
        /// GetOne By Params
        /// </summary>
        public T GetOne(System.Int32 ClaveUsuario, System.Int32 ClaveSubmodulo, System.Int32 ClavePermiso, System.Int32 ClaveSistema)
        {
            return base.GetObjectByAnyStoredProcedure(StoredProceduresPrefix() + "PermisoUsuario_GetOne", ClaveUsuario, ClaveSubmodulo, ClavePermiso, ClaveSistema);
        }


        // GetOne By Objects and Params
            


        

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByPermiso(DbTransaction transaction, System.Int32 ClavePermiso)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "PermisoUsuario_GetByPermiso", ClavePermiso);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByPermiso(DbTransaction transaction, IUniqueIdentifiable Permiso)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "PermisoUsuario_GetByPermiso", Permiso.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetBySistema(DbTransaction transaction, System.Int32 ClaveSistema)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "PermisoUsuario_GetBySistema", ClaveSistema);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetBySistema(DbTransaction transaction, IUniqueIdentifiable Sistema)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "PermisoUsuario_GetBySistema", Sistema.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetBySubmodulo(DbTransaction transaction, System.Int32 ClaveSubmodulo)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "PermisoUsuario_GetBySubmodulo", ClaveSubmodulo);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetBySubmodulo(DbTransaction transaction, IUniqueIdentifiable Submodulo)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "PermisoUsuario_GetBySubmodulo", Submodulo.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByUsuario(DbTransaction transaction, System.Int32 ClaveUsuario)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "PermisoUsuario_GetByUsuario", ClaveUsuario);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByUsuario(DbTransaction transaction, IUniqueIdentifiable Usuario)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "PermisoUsuario_GetByUsuario", Usuario.Identifier());
        }

    


        

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByPermiso(System.Int32 ClavePermiso)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "PermisoUsuario_GetByPermiso", ClavePermiso);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByPermiso(IUniqueIdentifiable Permiso)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "PermisoUsuario_GetByPermiso", Permiso.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetBySistema(System.Int32 ClaveSistema)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "PermisoUsuario_GetBySistema", ClaveSistema);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetBySistema(IUniqueIdentifiable Sistema)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "PermisoUsuario_GetBySistema", Sistema.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetBySubmodulo(System.Int32 ClaveSubmodulo)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "PermisoUsuario_GetBySubmodulo", ClaveSubmodulo);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetBySubmodulo(IUniqueIdentifiable Submodulo)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "PermisoUsuario_GetBySubmodulo", Submodulo.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByUsuario(System.Int32 ClaveUsuario)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "PermisoUsuario_GetByUsuario", ClaveUsuario);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByUsuario(IUniqueIdentifiable Usuario)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "PermisoUsuario_GetByUsuario", Usuario.Identifier());
        }

    

        //Database Queries 
        



        #region IGenericGateway

        object IGenericGateway.GetOne(IUniqueIdentifiable identifier)
        {
            return base.GetOne(identifier);
        }

        object IGenericGateway.GetAll()
        {
            return base.GetAll();
        }

        object IGenericGateway.GetByParent(IUniqueIdentifiable parentEntity)
        {
            return base.GetByParent(parentEntity);
        }

        #endregion

    }
}





