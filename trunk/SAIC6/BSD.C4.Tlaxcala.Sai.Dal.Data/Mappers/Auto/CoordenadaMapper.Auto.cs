
        
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 8/31/2009 - 11:49 PM
// This is a partial class file. The other one is CoordenadaMapper.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using System;
using BSD.C4.Tlaxcala.Sai.Dal.Rules.Entities;
using BSD.C4.Tlaxcala.Sai.Dal.Rules.Objects;
using Cooperator.Framework.Data;
using Cooperator.Framework.Data.Exceptions;
using Cooperator.Framework.Core;
using System.Data.Common;
using System.Reflection;
using System.Web;
using System.Data;

namespace BSD.C4.Tlaxcala.Sai.Dal.Rules.Mappers
{

    
    /// <summary>
    /// 
    /// </summary>
    public partial class CoordenadaMapper : BaseGateway<CoordenadaObject, CoordenadaObjectList>, IGenericGateway
    {


        #region "Singleton"

        static CoordenadaMapper _instance;

        private CoordenadaMapper()
        {
        }

        /// <summary>
        /// 
        /// </summary>
        public static CoordenadaMapper Instance() {
            if (_instance == null) {
                if (HttpContext.Current == null) 
                    _instance = new CoordenadaMapper();
                else {
                    CoordenadaMapper inst = HttpContext.Current.Items["BSD.C4.Tlaxcala.Sai.Dal.Rules.CoordenadaMapperSingleton"] as CoordenadaMapper;
                    if (inst == null) {
                        inst = new CoordenadaMapper();
                        HttpContext.Current.Items.Add("BSD.C4.Tlaxcala.Sai.Dal.Rules.CoordenadaMapperSingleton", inst);
                    }
                    return inst;
                }
            }
            return _instance;
        }


        #endregion

        /// <summary>
        /// 
        /// </summary>
        public string[] GetPKPropertiesNames()
        {
            
            string[] s ={"ClaveCoordenada"};
            return s;
        }
        /// <summary>
        /// 
        /// </summary>
        public Type GetMappingType()
        {
            return typeof(CoordenadaObject);
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string TableName
        {
            get { return "Coordenada"; }
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string RuleName
        {
            get {return typeof(CoordenadaMapper).FullName;}
        }


        

        /// <summary>
        /// 
        /// </summary>
        protected override void HydrateFields(DbDataReader reader, CoordenadaObject entity)
        {
            
            IMappeableCoordenadaObject Coordenada = (IMappeableCoordenadaObject)entity;
            Coordenada.HydrateFields(
            reader.GetInt32(0),
(reader.IsDBNull(1)) ? new System.Nullable<System.Double>() : reader.GetDouble(1),
(reader.IsDBNull(2)) ? new System.Nullable<System.Double>() : reader.GetDouble(2));
        }

        /// <summary>
        /// 
        /// </summary>
        protected override object[] GetFieldsForInsert(CoordenadaObject entity)
        {

            IMappeableCoordenadaObject Coordenada = (IMappeableCoordenadaObject)entity;
            return Coordenada.GetFieldsForInsert();
        }

        /// <summary>
        /// 
        /// </summary>
        protected override object[] GetFieldsForUpdate(CoordenadaObject entity)
        {

            IMappeableCoordenadaObject Coordenada = (IMappeableCoordenadaObject)entity;
            return Coordenada.GetFieldsForUpdate();
        }

        /// <summary>
        /// 
        /// </summary>
        protected override object[] GetFieldsForDelete(CoordenadaObject entity)
        {

            IMappeableCoordenadaObject Coordenada = (IMappeableCoordenadaObject)entity;
            return Coordenada.GetFieldsForDelete();
        }


        /// <summary>
        /// Raised after insert and update
        /// </summary>
        protected override void UpdateObjectFromOutputParams(CoordenadaObject entity, object[] parameters)
        {
            // Update properties from Output parameters
            ((IMappeableCoordenadaObject) entity).UpdateObjectFromOutputParams(parameters);
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string StoredProceduresPrefix()
        {
            return "in_";
        }


          





        /// <summary>
        /// Get a CoordenadaObject by execute a SQL Query Text
        /// </summary>
        public CoordenadaObject GetOneBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectBySQLText(sqlQueryText);
        }

        /// <summary>
        /// Get a CoordenadaObjectList by execute a SQL Query Text
        /// </summary>
        public CoordenadaObjectList GetBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectListBySQLText(sqlQueryText);
        }


        /// <summary>
        /// 
        /// </summary>
        public CoordenadaObject GetOne(System.Int32 ClaveCoordenada)
        {
            return base.GetOne(new CoordenadaObject(ClaveCoordenada));
        }


        // GetOne By Objects and Params
            


        


        

        /// <summary>
        /// 
        /// </summary>
        public void Delete(System.Int32 ClaveCoordenada)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Coordenada_Delete", ClaveCoordenada);
        }

        /// <summary>
        /// 
        /// </summary>
        public void Delete(DbTransaction transaction, System.Int32 ClaveCoordenada)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Coordenada_Delete", ClaveCoordenada);
        }


        // Delete By Objects and Params
            



        


        //Database Queries 
        


        #region IGenericGateway

        object IGenericGateway.GetOne(IUniqueIdentifiable identifier)
        {
            return base.GetOne(identifier);
        }

        object IGenericGateway.GetAll()
        {
            return base.GetAll();
        }

        object IGenericGateway.GetByParent(IUniqueIdentifiable parentEntity)
        {
            return base.GetByParent(parentEntity);
        }

        #endregion


    }


}

namespace BSD.C4.Tlaxcala.Sai.Dal.Rules.Wrappers
{
    /// <summary>
    /// 
    /// </summary>
    public class CoordenadaMapperWrapper
    {

        /// <summary>
        /// 
        /// </summary>
        public string[] GetPKPropertiesNames()
        {
            return Instance().GetPKPropertiesNames();
        }
        /// <summary>
        /// 
        /// </summary>
        public Type GetMappingType()
        {
            return Instance().GetMappingType();
        }



        /// <summary>
        /// 
        /// </summary>
        public BSD.C4.Tlaxcala.Sai.Dal.Rules.Mappers.CoordenadaMapper Instance()
        {
            return BSD.C4.Tlaxcala.Sai.Dal.Rules.Mappers.CoordenadaMapper.Instance(); 
        }
        
        /// <summary>
        /// Get a CoordenadaEntity by calling a Stored Procedure
        /// </summary>
        public Objects.CoordenadaObject GetOne(System.Int32 ClaveCoordenada) {
            return Instance().GetOne( ClaveCoordenada);
        }

        // GetBy Objects and Params
            

        

       

            

        
        /// <summary>
        /// Delete Coordenada 
        /// </summary>
        public void Delete(System.Int32 ClaveCoordenada){
            Instance().Delete(ClaveCoordenada);
        }

        /// <summary>
        /// Delete CoordenadaObject 
        /// </summary>
        public void Delete(Objects.CoordenadaObject entity ){
            Instance().Delete(entity);
        }

        /// <summary>
        /// Save CoordenadaObject  
        /// </summary>
        public void Save(Objects.CoordenadaObject entity){
            Instance().Save(entity);
        }

        /// <summary>
        /// Insert CoordenadaObject 
        /// </summary>
        public void Insert(Objects.CoordenadaObject entity){
            Instance().Insert(entity);
        }

        /// <summary>
        /// GetAll CoordenadaObject 
        /// </summary>
        public Objects.CoordenadaObjectList GetAll(){  
            return Instance().GetAll();
        }

        /// <summary>
        /// Save Coordenada 
        /// </summary>
        public void Save(System.Int32 ClaveCoordenada, System.Double Longitud, System.Double Latitud){
            Objects.CoordenadaObject entity = Instance().GetOne(ClaveCoordenada);
            if (entity == null)
                throw new ApplicationException(String.Format("Entity not found. IUniqueIdentifiable Values: {0} = {1}", "ClaveCoordenada", ClaveCoordenada));

            entity.Longitud = Longitud;
            entity.Latitud = Latitud;
            Instance().Save(entity);
        }

        /// <summary>
        /// Insert CoordenadaObject
        /// </summary>
        public void Insert(System.Double Longitud, System.Double Latitud){
            Objects.CoordenadaObject entity = new Objects.CoordenadaObject();

            entity.Longitud = Longitud;
            entity.Latitud = Latitud;
            Instance().Insert(entity);
        }


        //Database Queries 
        


    }
}





namespace BSD.C4.Tlaxcala.Sai.Dal.Rules.Loaders
{

    /// <summary>
    /// 
    /// </summary>
    public partial class CoordenadaLoader<T> : BaseLoader< T, CoordenadaObject, ObjectList<T>>, IGenericGateway where T : CoordenadaObject, new()
    {

        #region "Singleton"

        static CoordenadaLoader<T> _instance;

        private CoordenadaLoader()
        {
        }

        /// <summary>
        /// 
        /// </summary>
        public static CoordenadaLoader<T> Instance() {
            if (_instance == null) {
                if (HttpContext.Current == null) 
                    _instance = new CoordenadaLoader<T>();
                else {
                    CoordenadaLoader<T> inst = HttpContext.Current.Items["BSD.C4.Tlaxcala.Sai.Dal.Rules.CoordenadaLoaderSingleton"] as CoordenadaLoader<T>;
                    if (inst == null) {
                        inst = new CoordenadaLoader<T>();
                        HttpContext.Current.Items.Add("BSD.C4.Tlaxcala.Sai.Dal.Rules.CoordenadaLoaderSingleton", inst);
                    }
                    return inst;
                }
            }
            return _instance;
        }


        #endregion

        /// <summary>
        /// 
        /// </summary>
        public string[] GetPKPropertiesNames()
        {
            
            string[] s ={"ClaveCoordenada"};
            return s;
        }
        /// <summary>
        /// 
        /// </summary>
        public Type GetMappingType()
        {
            return typeof(CoordenadaObject);
        }


        /// <summary>
        /// 
        /// </summary>
        protected override string TableName
        {
            get { return "Coordenada"; }
        }

        
        
        /// <summary>
        /// 
        /// </summary>
        protected override void HydrateFields(DbDataReader reader, CoordenadaObject entity)
        {
            
            IMappeableCoordenadaObject Coordenada = (IMappeableCoordenadaObject)entity;
            Coordenada.HydrateFields(
            reader.GetInt32(0),
(reader.IsDBNull(1)) ? new System.Nullable<System.Double>() : reader.GetDouble(1),
(reader.IsDBNull(2)) ? new System.Nullable<System.Double>() : reader.GetDouble(2));
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string StoredProceduresPrefix()
        {
            return "in_";
        }


        



        /// <summary>
        /// Get a Coordenada by execute a SQL Query Text
        /// </summary>
        public T GetOneBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectBySQLText(sqlQueryText);
        }

        /// <summary>
        /// Get a CoordenadaList by execute a SQL Query Text
        /// </summary>
        public ObjectList<T> GetBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectListBySQLText(sqlQueryText);
        }

        /// <summary>
        /// GetOne By Params
        /// </summary>
        public T GetOne(System.Int32 ClaveCoordenada)
        {
            return base.GetObjectByAnyStoredProcedure(StoredProceduresPrefix() + "Coordenada_GetOne", ClaveCoordenada);
        }


        // GetOne By Objects and Params
            


        


        

        //Database Queries 
        



        #region IGenericGateway

        object IGenericGateway.GetOne(IUniqueIdentifiable identifier)
        {
            return base.GetOne(identifier);
        }

        object IGenericGateway.GetAll()
        {
            return base.GetAll();
        }

        object IGenericGateway.GetByParent(IUniqueIdentifiable parentEntity)
        {
            return base.GetByParent(parentEntity);
        }

        #endregion

    }
}





