
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 04/08/2009 - 06:03 p.m.
// This is a partial class file. The other one is VehiculoRobadoMapper.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using System;

using BSD.C4.Tlaxcala.Sai.Dal.Rules.Objects;
using Cooperator.Framework.Data;
using Cooperator.Framework.Data.Exceptions;
using Cooperator.Framework.Core;
using System.Data.Common;
using System.Reflection;
using System.Web;
using System.Data;

namespace BSD.C4.Tlaxcala.Sai.Dal.Rules.Mappers
{

    
    /// <summary>
    /// 
    /// </summary>
    public partial class VehiculoRobadoMapper : BaseGateway<VehiculoRobadoObject, VehiculoRobadoObjectList>, IGenericGateway
    {


        #region "Singleton"

        static VehiculoRobadoMapper _instance;

        private VehiculoRobadoMapper()
        {
        }

        /// <summary>
        /// 
        /// </summary>
        public static VehiculoRobadoMapper Instance() {
            if (_instance == null) {
                if (HttpContext.Current == null) 
                    _instance = new VehiculoRobadoMapper();
                else {
                    VehiculoRobadoMapper inst = HttpContext.Current.Items["BSD.C4.Tlaxcala.Sai.Dal.Rules.VehiculoRobadoMapperSingleton"] as VehiculoRobadoMapper;
                    if (inst == null) {
                        inst = new VehiculoRobadoMapper();
                        HttpContext.Current.Items.Add("BSD.C4.Tlaxcala.Sai.Dal.Rules.VehiculoRobadoMapperSingleton", inst);
                    }
                    return inst;
                }
            }
            return _instance;
        }


        #endregion

        /// <summary>
        /// 
        /// </summary>
        public string[] GetPKPropertiesNames()
        {
            
            string[] s ={"ClaveVehiculo","Folio"};
            return s;
        }
        /// <summary>
        /// 
        /// </summary>
        public Type GetMappingType()
        {
            return typeof(VehiculoRobadoObject);
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string TableName
        {
            get { return "VehiculoRobado"; }
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string RuleName
        {
            get {return typeof(VehiculoRobadoMapper).FullName;}
        }


        

        /// <summary>
        /// 
        /// </summary>
        protected override void HydrateFields(DbDataReader reader, VehiculoRobadoObject entity)
        {
            
            IMappeableVehiculoRobadoObject VehiculoRobado = (IMappeableVehiculoRobadoObject)entity;
            VehiculoRobado.HydrateFields(
            reader.GetInt32(0),
reader.GetInt32(1),
(reader.IsDBNull(2)) ? new System.Nullable<System.Int32>() : reader.GetInt32(2));
        }

        /// <summary>
        /// 
        /// </summary>
        protected override object[] GetFieldsForInsert(VehiculoRobadoObject entity)
        {

            IMappeableVehiculoRobadoObject VehiculoRobado = (IMappeableVehiculoRobadoObject)entity;
            return VehiculoRobado.GetFieldsForInsert();
        }

        /// <summary>
        /// 
        /// </summary>
        protected override object[] GetFieldsForUpdate(VehiculoRobadoObject entity)
        {

            IMappeableVehiculoRobadoObject VehiculoRobado = (IMappeableVehiculoRobadoObject)entity;
            return VehiculoRobado.GetFieldsForUpdate();
        }

        /// <summary>
        /// 
        /// </summary>
        protected override object[] GetFieldsForDelete(VehiculoRobadoObject entity)
        {

            IMappeableVehiculoRobadoObject VehiculoRobado = (IMappeableVehiculoRobadoObject)entity;
            return VehiculoRobado.GetFieldsForDelete();
        }


        /// <summary>
        /// Raised after insert and update
        /// </summary>
        protected override void UpdateObjectFromOutputParams(VehiculoRobadoObject entity, object[] parameters)
        {
            // Update properties from Output parameters
            ((IMappeableVehiculoRobadoObject) entity).UpdateObjectFromOutputParams(parameters);
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string StoredProceduresPrefix()
        {
            return "up_";
        }


          





        /// <summary>
        /// Get a VehiculoRobadoObject by execute a SQL Query Text
        /// </summary>
        public VehiculoRobadoObject GetOneBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectBySQLText(sqlQueryText);
        }

        /// <summary>
        /// Get a VehiculoRobadoObjectList by execute a SQL Query Text
        /// </summary>
        public VehiculoRobadoObjectList GetBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectListBySQLText(sqlQueryText);
        }


        /// <summary>
        /// 
        /// </summary>
        public VehiculoRobadoObject GetOne(System.Int32 ClaveVehiculo, System.Int32 Folio)
        {
            return base.GetOne(new VehiculoRobadoObject(ClaveVehiculo, Folio));
        }


        // GetOne By Objects and Params
            


        

        /// <summary>
        /// 
        /// </summary>
        public VehiculoRobadoObjectList GetByIncidencia(DbTransaction transaction, System.Int32 Folio)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "VehiculoRobado_GetByIncidencia", Folio);
        }

        /// <summary>
        /// 
        /// </summary>
        public VehiculoRobadoObjectList GetByIncidencia(DbTransaction transaction, IUniqueIdentifiable Incidencia)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "VehiculoRobado_GetByIncidencia", Incidencia.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public VehiculoRobadoObjectList GetByPropietarioVehiculo(DbTransaction transaction, System.Int32 ClavePropietario)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "VehiculoRobado_GetByPropietarioVehiculo", ClavePropietario);
        }

        /// <summary>
        /// 
        /// </summary>
        public VehiculoRobadoObjectList GetByPropietarioVehiculo(DbTransaction transaction, IUniqueIdentifiable PropietarioVehiculo)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "VehiculoRobado_GetByPropietarioVehiculo", PropietarioVehiculo.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public VehiculoRobadoObjectList GetByVehiculo(DbTransaction transaction, System.Int32 ClaveVehiculo)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "VehiculoRobado_GetByVehiculo", ClaveVehiculo);
        }

        /// <summary>
        /// 
        /// </summary>
        public VehiculoRobadoObjectList GetByVehiculo(DbTransaction transaction, IUniqueIdentifiable Vehiculo)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "VehiculoRobado_GetByVehiculo", Vehiculo.Identifier());
        }

    


        

        /// <summary>
        /// 
        /// </summary>
        public VehiculoRobadoObjectList GetByIncidencia(System.Int32 Folio)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "VehiculoRobado_GetByIncidencia", Folio);
        }

        /// <summary>
        /// 
        /// </summary>
        public VehiculoRobadoObjectList GetByIncidencia(IUniqueIdentifiable Incidencia)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "VehiculoRobado_GetByIncidencia", Incidencia.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public VehiculoRobadoObjectList GetByPropietarioVehiculo(System.Int32 ClavePropietario)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "VehiculoRobado_GetByPropietarioVehiculo", ClavePropietario);
        }

        /// <summary>
        /// 
        /// </summary>
        public VehiculoRobadoObjectList GetByPropietarioVehiculo(IUniqueIdentifiable PropietarioVehiculo)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "VehiculoRobado_GetByPropietarioVehiculo", PropietarioVehiculo.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public VehiculoRobadoObjectList GetByVehiculo(System.Int32 ClaveVehiculo)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "VehiculoRobado_GetByVehiculo", ClaveVehiculo);
        }

        /// <summary>
        /// 
        /// </summary>
        public VehiculoRobadoObjectList GetByVehiculo(IUniqueIdentifiable Vehiculo)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "VehiculoRobado_GetByVehiculo", Vehiculo.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public void Delete(System.Int32 ClaveVehiculo, System.Int32 Folio)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "VehiculoRobado_Delete", ClaveVehiculo, Folio);
        }

        /// <summary>
        /// 
        /// </summary>
        public void Delete(DbTransaction transaction, System.Int32 ClaveVehiculo, System.Int32 Folio)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "VehiculoRobado_Delete", ClaveVehiculo, Folio);
        }


        // Delete By Objects and Params
            



        

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByIncidencia(System.Int32 Folio)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "VehiculoRobado_DeleteByIncidencia", Folio);
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByIncidencia(DbTransaction transaction, System.Int32 Folio)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "VehiculoRobado_DeleteByIncidencia", Folio);
        }


        /// <summary>
        /// 
        /// </summary>
        public void DeleteByIncidencia(IUniqueIdentifiable Incidencia)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "VehiculoRobado_DeleteByIncidencia", Incidencia.Identifier());
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByIncidencia(DbTransaction transaction, IUniqueIdentifiable Incidencia)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "VehiculoRobado_DeleteByIncidencia", Incidencia.Identifier());
        }


    

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByPropietarioVehiculo(System.Int32 ClavePropietario)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "VehiculoRobado_DeleteByPropietarioVehiculo", ClavePropietario);
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByPropietarioVehiculo(DbTransaction transaction, System.Int32 ClavePropietario)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "VehiculoRobado_DeleteByPropietarioVehiculo", ClavePropietario);
        }


        /// <summary>
        /// 
        /// </summary>
        public void DeleteByPropietarioVehiculo(IUniqueIdentifiable PropietarioVehiculo)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "VehiculoRobado_DeleteByPropietarioVehiculo", PropietarioVehiculo.Identifier());
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByPropietarioVehiculo(DbTransaction transaction, IUniqueIdentifiable PropietarioVehiculo)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "VehiculoRobado_DeleteByPropietarioVehiculo", PropietarioVehiculo.Identifier());
        }


    

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByVehiculo(System.Int32 ClaveVehiculo)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "VehiculoRobado_DeleteByVehiculo", ClaveVehiculo);
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByVehiculo(DbTransaction transaction, System.Int32 ClaveVehiculo)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "VehiculoRobado_DeleteByVehiculo", ClaveVehiculo);
        }


        /// <summary>
        /// 
        /// </summary>
        public void DeleteByVehiculo(IUniqueIdentifiable Vehiculo)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "VehiculoRobado_DeleteByVehiculo", Vehiculo.Identifier());
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByVehiculo(DbTransaction transaction, IUniqueIdentifiable Vehiculo)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "VehiculoRobado_DeleteByVehiculo", Vehiculo.Identifier());
        }


    


        //Database Queries 
        


        #region IGenericGateway

        object IGenericGateway.GetOne(IUniqueIdentifiable identifier)
        {
            return base.GetOne(identifier);
        }

        object IGenericGateway.GetAll()
        {
            return base.GetAll();
        }

        object IGenericGateway.GetByParent(IUniqueIdentifiable parentEntity)
        {
            return base.GetByParent(parentEntity);
        }

        #endregion


    }


}

namespace BSD.C4.Tlaxcala.Sai.Dal.Rules.Wrappers
{
    /// <summary>
    /// 
    /// </summary>
    public class VehiculoRobadoMapperWrapper
    {

        /// <summary>
        /// 
        /// </summary>
        public string[] GetPKPropertiesNames()
        {
            return Instance().GetPKPropertiesNames();
        }
        /// <summary>
        /// 
        /// </summary>
        public Type GetMappingType()
        {
            return Instance().GetMappingType();
        }



        /// <summary>
        /// 
        /// </summary>
        public BSD.C4.Tlaxcala.Sai.Dal.Rules.Mappers.VehiculoRobadoMapper Instance()
        {
            return BSD.C4.Tlaxcala.Sai.Dal.Rules.Mappers.VehiculoRobadoMapper.Instance(); 
        }
        
        /// <summary>
        /// Get a VehiculoRobadoEntity by calling a Stored Procedure
        /// </summary>
        public Objects.VehiculoRobadoObject GetOne(System.Int32 ClaveVehiculo, System.Int32 Folio) {
            return Instance().GetOne( ClaveVehiculo, Folio);
        }

        // GetBy Objects and Params
            

        

        /// <summary>
        /// Get a VehiculoRobadoObjectList by calling a Stored Procedure
        /// </summary>
        public Objects.VehiculoRobadoObjectList GetByIncidencia(System.Int32 Folio)
        {
            return Instance().GetByIncidencia(Folio);
        }

        /// <summary>
        /// Get a VehiculoRobadoObjectList by calling a Stored Procedure
        /// </summary>
        public Objects.VehiculoRobadoObjectList GetByIncidencia(IUniqueIdentifiable Incidencia)
        {
            return Instance().GetByIncidencia(Incidencia);
        }

    

        /// <summary>
        /// Get a VehiculoRobadoObjectList by calling a Stored Procedure
        /// </summary>
        public Objects.VehiculoRobadoObjectList GetByPropietarioVehiculo(System.Int32 ClavePropietario)
        {
            return Instance().GetByPropietarioVehiculo(ClavePropietario);
        }

        /// <summary>
        /// Get a VehiculoRobadoObjectList by calling a Stored Procedure
        /// </summary>
        public Objects.VehiculoRobadoObjectList GetByPropietarioVehiculo(IUniqueIdentifiable PropietarioVehiculo)
        {
            return Instance().GetByPropietarioVehiculo(PropietarioVehiculo);
        }

    

        /// <summary>
        /// Get a VehiculoRobadoObjectList by calling a Stored Procedure
        /// </summary>
        public Objects.VehiculoRobadoObjectList GetByVehiculo(System.Int32 ClaveVehiculo)
        {
            return Instance().GetByVehiculo(ClaveVehiculo);
        }

        /// <summary>
        /// Get a VehiculoRobadoObjectList by calling a Stored Procedure
        /// </summary>
        public Objects.VehiculoRobadoObjectList GetByVehiculo(IUniqueIdentifiable Vehiculo)
        {
            return Instance().GetByVehiculo(Vehiculo);
        }

    

       

            

        

        /// <summary>
        /// Delete VehiculoRobado by Incidencia
        /// </summary>
        public void DeleteByIncidencia(System.Int32 Folio)
        {
            Instance().DeleteByIncidencia(Folio);
        }

        /// <summary>
        /// Delete VehiculoRobadoObject by Incidencia
        /// </summary>
        public void DeleteByIncidencia(IUniqueIdentifiable Incidencia)
        {
            Instance().DeleteByIncidencia(Incidencia);
        }

    

        /// <summary>
        /// Delete VehiculoRobado by PropietarioVehiculo
        /// </summary>
        public void DeleteByPropietarioVehiculo(System.Int32 ClavePropietario)
        {
            Instance().DeleteByPropietarioVehiculo(ClavePropietario);
        }

        /// <summary>
        /// Delete VehiculoRobadoObject by PropietarioVehiculo
        /// </summary>
        public void DeleteByPropietarioVehiculo(IUniqueIdentifiable PropietarioVehiculo)
        {
            Instance().DeleteByPropietarioVehiculo(PropietarioVehiculo);
        }

    

        /// <summary>
        /// Delete VehiculoRobado by Vehiculo
        /// </summary>
        public void DeleteByVehiculo(System.Int32 ClaveVehiculo)
        {
            Instance().DeleteByVehiculo(ClaveVehiculo);
        }

        /// <summary>
        /// Delete VehiculoRobadoObject by Vehiculo
        /// </summary>
        public void DeleteByVehiculo(IUniqueIdentifiable Vehiculo)
        {
            Instance().DeleteByVehiculo(Vehiculo);
        }

    
        /// <summary>
        /// Delete VehiculoRobado 
        /// </summary>
        public void Delete(System.Int32 ClaveVehiculo, System.Int32 Folio){
            Instance().Delete(ClaveVehiculo, Folio);
        }

        /// <summary>
        /// Delete VehiculoRobadoObject 
        /// </summary>
        public void Delete(Objects.VehiculoRobadoObject entity ){
            Instance().Delete(entity);
        }

        /// <summary>
        /// Save VehiculoRobadoObject  
        /// </summary>
        public void Save(Objects.VehiculoRobadoObject entity){
            Instance().Save(entity);
        }

        /// <summary>
        /// Insert VehiculoRobadoObject 
        /// </summary>
        public void Insert(Objects.VehiculoRobadoObject entity){
            Instance().Insert(entity);
        }

        /// <summary>
        /// GetAll VehiculoRobadoObject 
        /// </summary>
        public Objects.VehiculoRobadoObjectList GetAll(){  
            return Instance().GetAll();
        }

        /// <summary>
        /// Save VehiculoRobado 
        /// </summary>
        public void Save(System.Int32 ClaveVehiculo, System.Int32 Folio, System.Int32 ClavePropietario){
            Objects.VehiculoRobadoObject entity = Instance().GetOne(ClaveVehiculo, Folio);
            if (entity == null)
                throw new ApplicationException(String.Format("Entity not found. IUniqueIdentifiable Values: {0} = {1}, {2} = {3}", "ClaveVehiculo", ClaveVehiculo, "Folio", Folio));

            entity.ClavePropietario = ClavePropietario;
            Instance().Save(entity);
        }

        /// <summary>
        /// Insert VehiculoRobadoObject
        /// </summary>
        public void Insert(System.Int32 ClaveVehiculo, System.Int32 Folio, System.Int32 ClavePropietario){
            Objects.VehiculoRobadoObject entity = new Objects.VehiculoRobadoObject();

            entity.ClaveVehiculo = ClaveVehiculo;
            entity.Folio = Folio;
            entity.ClavePropietario = ClavePropietario;
            Instance().Insert(entity);
        }


        //Database Queries 
        


    }
}





namespace BSD.C4.Tlaxcala.Sai.Dal.Rules.Loaders
{

    /// <summary>
    /// 
    /// </summary>
    public partial class VehiculoRobadoLoader<T> : BaseLoader< T, VehiculoRobadoObject, ObjectList<T>>, IGenericGateway where T : VehiculoRobadoObject, new()
    {

        #region "Singleton"

        static VehiculoRobadoLoader<T> _instance;

        private VehiculoRobadoLoader()
        {
        }

        /// <summary>
        /// 
        /// </summary>
        public static VehiculoRobadoLoader<T> Instance() {
            if (_instance == null) {
                if (HttpContext.Current == null) 
                    _instance = new VehiculoRobadoLoader<T>();
                else {
                    VehiculoRobadoLoader<T> inst = HttpContext.Current.Items["BSD.C4.Tlaxcala.Sai.Dal.Rules.VehiculoRobadoLoaderSingleton"] as VehiculoRobadoLoader<T>;
                    if (inst == null) {
                        inst = new VehiculoRobadoLoader<T>();
                        HttpContext.Current.Items.Add("BSD.C4.Tlaxcala.Sai.Dal.Rules.VehiculoRobadoLoaderSingleton", inst);
                    }
                    return inst;
                }
            }
            return _instance;
        }


        #endregion

        /// <summary>
        /// 
        /// </summary>
        public string[] GetPKPropertiesNames()
        {
            
            string[] s ={"ClaveVehiculo","Folio"};
            return s;
        }
        /// <summary>
        /// 
        /// </summary>
        public Type GetMappingType()
        {
            return typeof(VehiculoRobadoObject);
        }


        /// <summary>
        /// 
        /// </summary>
        protected override string TableName
        {
            get { return "VehiculoRobado"; }
        }

        
        
        /// <summary>
        /// 
        /// </summary>
        protected override void HydrateFields(DbDataReader reader, VehiculoRobadoObject entity)
        {
            
            IMappeableVehiculoRobadoObject VehiculoRobado = (IMappeableVehiculoRobadoObject)entity;
            VehiculoRobado.HydrateFields(
            reader.GetInt32(0),
reader.GetInt32(1),
(reader.IsDBNull(2)) ? new System.Nullable<System.Int32>() : reader.GetInt32(2));
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string StoredProceduresPrefix()
        {
            return "up_";
        }


        



        /// <summary>
        /// Get a VehiculoRobado by execute a SQL Query Text
        /// </summary>
        public T GetOneBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectBySQLText(sqlQueryText);
        }

        /// <summary>
        /// Get a VehiculoRobadoList by execute a SQL Query Text
        /// </summary>
        public ObjectList<T> GetBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectListBySQLText(sqlQueryText);
        }

        /// <summary>
        /// GetOne By Params
        /// </summary>
        public T GetOne(System.Int32 ClaveVehiculo, System.Int32 Folio)
        {
            return base.GetObjectByAnyStoredProcedure(StoredProceduresPrefix() + "VehiculoRobado_GetOne", ClaveVehiculo, Folio);
        }


        // GetOne By Objects and Params
            


        

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByIncidencia(DbTransaction transaction, System.Int32 Folio)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "VehiculoRobado_GetByIncidencia", Folio);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByIncidencia(DbTransaction transaction, IUniqueIdentifiable Incidencia)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "VehiculoRobado_GetByIncidencia", Incidencia.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByPropietarioVehiculo(DbTransaction transaction, System.Int32 ClavePropietario)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "VehiculoRobado_GetByPropietarioVehiculo", ClavePropietario);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByPropietarioVehiculo(DbTransaction transaction, IUniqueIdentifiable PropietarioVehiculo)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "VehiculoRobado_GetByPropietarioVehiculo", PropietarioVehiculo.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByVehiculo(DbTransaction transaction, System.Int32 ClaveVehiculo)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "VehiculoRobado_GetByVehiculo", ClaveVehiculo);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByVehiculo(DbTransaction transaction, IUniqueIdentifiable Vehiculo)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "VehiculoRobado_GetByVehiculo", Vehiculo.Identifier());
        }

    


        

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByIncidencia(System.Int32 Folio)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "VehiculoRobado_GetByIncidencia", Folio);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByIncidencia(IUniqueIdentifiable Incidencia)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "VehiculoRobado_GetByIncidencia", Incidencia.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByPropietarioVehiculo(System.Int32 ClavePropietario)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "VehiculoRobado_GetByPropietarioVehiculo", ClavePropietario);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByPropietarioVehiculo(IUniqueIdentifiable PropietarioVehiculo)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "VehiculoRobado_GetByPropietarioVehiculo", PropietarioVehiculo.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByVehiculo(System.Int32 ClaveVehiculo)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "VehiculoRobado_GetByVehiculo", ClaveVehiculo);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByVehiculo(IUniqueIdentifiable Vehiculo)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "VehiculoRobado_GetByVehiculo", Vehiculo.Identifier());
        }

    

        //Database Queries 
        



        #region IGenericGateway

        object IGenericGateway.GetOne(IUniqueIdentifiable identifier)
        {
            return base.GetOne(identifier);
        }

        object IGenericGateway.GetAll()
        {
            return base.GetAll();
        }

        object IGenericGateway.GetByParent(IUniqueIdentifiable parentEntity)
        {
            return base.GetByParent(parentEntity);
        }

        #endregion

    }
}





