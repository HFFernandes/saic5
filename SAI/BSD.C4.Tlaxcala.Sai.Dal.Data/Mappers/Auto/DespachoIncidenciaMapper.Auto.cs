
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 28/07/2009 - 08:51 p.m.
// This is a partial class file. The other one is DespachoIncidenciaMapper.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using System;
using BSD.C4.Tlaxcala.Sai.Dal.Rules.Entities;
using BSD.C4.Tlaxcala.Sai.Dal.Rules.Objects;
using Cooperator.Framework.Data;
using Cooperator.Framework.Data.Exceptions;
using Cooperator.Framework.Core;
using System.Data.Common;
using System.Reflection;
using System.Web;
using System.Data;

namespace BSD.C4.Tlaxcala.Sai.Dal.Rules.Mappers
{

    
    /// <summary>
    /// 
    /// </summary>
    public partial class DespachoIncidenciaMapper : BaseGateway<DespachoIncidencia, DespachoIncidenciaList>, IGenericGateway
    {


        #region "Singleton"

        static DespachoIncidenciaMapper _instance;

        private DespachoIncidenciaMapper()
        {
        }

        /// <summary>
        /// 
        /// </summary>
        public static DespachoIncidenciaMapper Instance() {
            if (_instance == null) {
                if (HttpContext.Current == null) 
                    _instance = new DespachoIncidenciaMapper();
                else {
                    DespachoIncidenciaMapper inst = HttpContext.Current.Items["BSD.C4.Tlaxcala.Sai.Dal.Rules.DespachoIncidenciaMapperSingleton"] as DespachoIncidenciaMapper;
                    if (inst == null) {
                        inst = new DespachoIncidenciaMapper();
                        HttpContext.Current.Items.Add("BSD.C4.Tlaxcala.Sai.Dal.Rules.DespachoIncidenciaMapperSingleton", inst);
                    }
                    return inst;
                }
            }
            return _instance;
        }


        #endregion

        /// <summary>
        /// 
        /// </summary>
        public string[] GetPKPropertiesNames()
        {
            
            string[] s ={"Clave"};
            return s;
        }
        /// <summary>
        /// 
        /// </summary>
        public Type GetMappingType()
        {
            return typeof(DespachoIncidencia);
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string TableName
        {
            get { return "DespachoIncidencia"; }
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string RuleName
        {
            get {return typeof(DespachoIncidenciaMapper).FullName;}
        }


        

        /// <summary>
        /// 
        /// </summary>
        protected override void HydrateFields(DbDataReader reader, DespachoIncidencia entity)
        {
            
            IMappeableDespachoIncidenciaObject DespachoIncidencia = (IMappeableDespachoIncidenciaObject)entity;
            DespachoIncidencia.HydrateFields(
            reader.GetInt32(0),
reader.GetInt32(1),
reader.GetInt32(2),
reader.GetInt32(3),
(reader.IsDBNull(4)) ? new System.Nullable<System.DateTime>() : reader.GetDateTime(4),
(reader.IsDBNull(5)) ? new System.Nullable<System.DateTime>() : reader.GetDateTime(5),
(reader.IsDBNull(6)) ? new System.Nullable<System.DateTime>() : reader.GetDateTime(6),
(reader.IsDBNull(7)) ? new System.Nullable<System.Int32>() : reader.GetInt32(7),
reader.GetInt32(8));
        }

        /// <summary>
        /// 
        /// </summary>
        protected override object[] GetFieldsForInsert(DespachoIncidencia entity)
        {

            IMappeableDespachoIncidenciaObject DespachoIncidencia = (IMappeableDespachoIncidenciaObject)entity;
            return DespachoIncidencia.GetFieldsForInsert();
        }

        /// <summary>
        /// 
        /// </summary>
        protected override object[] GetFieldsForUpdate(DespachoIncidencia entity)
        {

            IMappeableDespachoIncidenciaObject DespachoIncidencia = (IMappeableDespachoIncidenciaObject)entity;
            return DespachoIncidencia.GetFieldsForUpdate();
        }

        /// <summary>
        /// 
        /// </summary>
        protected override object[] GetFieldsForDelete(DespachoIncidencia entity)
        {

            IMappeableDespachoIncidenciaObject DespachoIncidencia = (IMappeableDespachoIncidenciaObject)entity;
            return DespachoIncidencia.GetFieldsForDelete();
        }


        /// <summary>
        /// Raised after insert and update
        /// </summary>
        protected override void UpdateObjectFromOutputParams(DespachoIncidencia entity, object[] parameters)
        {
            // Update properties from Output parameters
            ((IMappeableDespachoIncidenciaObject) entity).UpdateObjectFromOutputParams(parameters);
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string StoredProceduresPrefix()
        {
            return "up_";
        }


        


        

        /// <summary>
        /// Complete the aggregations for this entity. 
        /// </summary>
        protected override void CompleteEntity(DespachoIncidencia entity)
        {
            
            ((IMappeableDespachoIncidencia)entity).CompleteEntity();
        }


        # region CRUD Operations
        

        # endregion

        /// <summary>
        /// Delete children for this entity
        /// </summary>
        public void DeleteChildren(DbTransaction transaction, IUniqueIdentifiable entity)
        {
                        
        }


          





        /// <summary>
        /// Get a DespachoIncidencia by execute a SQL Query Text
        /// </summary>
        public DespachoIncidencia GetOneBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectBySQLText(sqlQueryText);
        }

        /// <summary>
        /// Get a DespachoIncidenciaList by execute a SQL Query Text
        /// </summary>
        public DespachoIncidenciaList GetBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectListBySQLText(sqlQueryText);
        }


        /// <summary>
        /// 
        /// </summary>
        public DespachoIncidencia GetOne(System.Int32 Clave)
        {
            return base.GetOne(new DespachoIncidencia(Clave));
        }


        // GetOne By Objects and Params
            


        

        /// <summary>
        /// 
        /// </summary>
        public DespachoIncidenciaList GetByCorporacionIncidencia(DbTransaction transaction, System.Int32 Folio, System.Int32 ClaveCorporacion)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "DespachoIncidencia_GetByCorporacionIncidencia", Folio, ClaveCorporacion);
        }

        /// <summary>
        /// 
        /// </summary>
        public DespachoIncidenciaList GetByCorporacionIncidencia(DbTransaction transaction, IUniqueIdentifiable CorporacionIncidencia)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "DespachoIncidencia_GetByCorporacionIncidencia", CorporacionIncidencia.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public DespachoIncidenciaList GetByUnidad(DbTransaction transaction, System.Int32 ClaveUnidad)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "DespachoIncidencia_GetByUnidad", ClaveUnidad);
        }

        /// <summary>
        /// 
        /// </summary>
        public DespachoIncidenciaList GetByUnidad(DbTransaction transaction, IUniqueIdentifiable ListaUnidades)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "DespachoIncidencia_GetByUnidad", ListaUnidades.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public DespachoIncidenciaList GetByUnidadApoyo(DbTransaction transaction, System.Int32 ClaveUnidadApoyo)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "DespachoIncidencia_GetByUnidadApoyo", ClaveUnidadApoyo);
        }

        /// <summary>
        /// 
        /// </summary>
        public DespachoIncidenciaList GetByUnidadApoyo(DbTransaction transaction, IUniqueIdentifiable ListaUnidades)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "DespachoIncidencia_GetByUnidadApoyo", ListaUnidades.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public DespachoIncidenciaList GetByUsuario(DbTransaction transaction, System.Int32 ClaveUsuario)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "DespachoIncidencia_GetByUsuario", ClaveUsuario);
        }

        /// <summary>
        /// 
        /// </summary>
        public DespachoIncidenciaList GetByUsuario(DbTransaction transaction, IUniqueIdentifiable Usuario)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "DespachoIncidencia_GetByUsuario", Usuario.Identifier());
        }

    


        

        /// <summary>
        /// 
        /// </summary>
        public DespachoIncidenciaList GetByCorporacionIncidencia(System.Int32 Folio, System.Int32 ClaveCorporacion)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "DespachoIncidencia_GetByCorporacionIncidencia", Folio, ClaveCorporacion);
        }

        /// <summary>
        /// 
        /// </summary>
        public DespachoIncidenciaList GetByCorporacionIncidencia(IUniqueIdentifiable CorporacionIncidencia)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "DespachoIncidencia_GetByCorporacionIncidencia", CorporacionIncidencia.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public DespachoIncidenciaList GetByUnidad(System.Int32 ClaveUnidad)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "DespachoIncidencia_GetByUnidad", ClaveUnidad);
        }

        /// <summary>
        /// 
        /// </summary>
        public DespachoIncidenciaList GetByUnidad(IUniqueIdentifiable ListaUnidades)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "DespachoIncidencia_GetByUnidad", ListaUnidades.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public DespachoIncidenciaList GetByUnidadApoyo(System.Int32 ClaveUnidadApoyo)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "DespachoIncidencia_GetByUnidadApoyo", ClaveUnidadApoyo);
        }

        /// <summary>
        /// 
        /// </summary>
        public DespachoIncidenciaList GetByUnidadApoyo(IUniqueIdentifiable ListaUnidades)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "DespachoIncidencia_GetByUnidadApoyo", ListaUnidades.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public DespachoIncidenciaList GetByUsuario(System.Int32 ClaveUsuario)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "DespachoIncidencia_GetByUsuario", ClaveUsuario);
        }

        /// <summary>
        /// 
        /// </summary>
        public DespachoIncidenciaList GetByUsuario(IUniqueIdentifiable Usuario)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "DespachoIncidencia_GetByUsuario", Usuario.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public void Delete(System.Int32 Clave)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "DespachoIncidencia_Delete", Clave);
        }

        /// <summary>
        /// 
        /// </summary>
        public void Delete(DbTransaction transaction, System.Int32 Clave)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "DespachoIncidencia_Delete", Clave);
        }


        // Delete By Objects and Params
            



        

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByCorporacionIncidencia(System.Int32 Folio, System.Int32 ClaveCorporacion)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "DespachoIncidencia_DeleteByCorporacionIncidencia", Folio, ClaveCorporacion);
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByCorporacionIncidencia(DbTransaction transaction, System.Int32 Folio, System.Int32 ClaveCorporacion)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "DespachoIncidencia_DeleteByCorporacionIncidencia", Folio, ClaveCorporacion);
        }


        /// <summary>
        /// 
        /// </summary>
        public void DeleteByCorporacionIncidencia(IUniqueIdentifiable CorporacionIncidencia)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "DespachoIncidencia_DeleteByCorporacionIncidencia", CorporacionIncidencia.Identifier());
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByCorporacionIncidencia(DbTransaction transaction, IUniqueIdentifiable CorporacionIncidencia)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "DespachoIncidencia_DeleteByCorporacionIncidencia", CorporacionIncidencia.Identifier());
        }


    

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByUnidad(System.Int32 ClaveUnidad)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "DespachoIncidencia_DeleteByUnidad", ClaveUnidad);
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByUnidad(DbTransaction transaction, System.Int32 ClaveUnidad)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "DespachoIncidencia_DeleteByUnidad", ClaveUnidad);
        }


        /// <summary>
        /// 
        /// </summary>
        public void DeleteByUnidad(IUniqueIdentifiable ListaUnidades)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "DespachoIncidencia_DeleteByUnidad", ListaUnidades.Identifier());
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByUnidad(DbTransaction transaction, IUniqueIdentifiable ListaUnidades)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "DespachoIncidencia_DeleteByUnidad", ListaUnidades.Identifier());
        }


    

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByUnidadApoyo(System.Int32 ClaveUnidadApoyo)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "DespachoIncidencia_DeleteByUnidadApoyo", ClaveUnidadApoyo);
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByUnidadApoyo(DbTransaction transaction, System.Int32 ClaveUnidadApoyo)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "DespachoIncidencia_DeleteByUnidadApoyo", ClaveUnidadApoyo);
        }


        /// <summary>
        /// 
        /// </summary>
        public void DeleteByUnidadApoyo(IUniqueIdentifiable ListaUnidades)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "DespachoIncidencia_DeleteByUnidadApoyo", ListaUnidades.Identifier());
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByUnidadApoyo(DbTransaction transaction, IUniqueIdentifiable ListaUnidades)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "DespachoIncidencia_DeleteByUnidadApoyo", ListaUnidades.Identifier());
        }


    

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByUsuario(System.Int32 ClaveUsuario)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "DespachoIncidencia_DeleteByUsuario", ClaveUsuario);
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByUsuario(DbTransaction transaction, System.Int32 ClaveUsuario)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "DespachoIncidencia_DeleteByUsuario", ClaveUsuario);
        }


        /// <summary>
        /// 
        /// </summary>
        public void DeleteByUsuario(IUniqueIdentifiable Usuario)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "DespachoIncidencia_DeleteByUsuario", Usuario.Identifier());
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByUsuario(DbTransaction transaction, IUniqueIdentifiable Usuario)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "DespachoIncidencia_DeleteByUsuario", Usuario.Identifier());
        }


    


        //Database Queries 
        


        #region IGenericGateway

        object IGenericGateway.GetOne(IUniqueIdentifiable identifier)
        {
            return base.GetOne(identifier);
        }

        object IGenericGateway.GetAll()
        {
            return base.GetAll();
        }

        object IGenericGateway.GetByParent(IUniqueIdentifiable parentEntity)
        {
            return base.GetByParent(parentEntity);
        }

        #endregion


    }


}

namespace BSD.C4.Tlaxcala.Sai.Dal.Rules.Wrappers
{
    /// <summary>
    /// 
    /// </summary>
    public class DespachoIncidenciaMapperWrapper
    {

        /// <summary>
        /// 
        /// </summary>
        public string[] GetPKPropertiesNames()
        {
            return Instance().GetPKPropertiesNames();
        }
        /// <summary>
        /// 
        /// </summary>
        public Type GetMappingType()
        {
            return Instance().GetMappingType();
        }



        /// <summary>
        /// 
        /// </summary>
        public BSD.C4.Tlaxcala.Sai.Dal.Rules.Mappers.DespachoIncidenciaMapper Instance()
        {
            return BSD.C4.Tlaxcala.Sai.Dal.Rules.Mappers.DespachoIncidenciaMapper.Instance(); 
        }
        
        /// <summary>
        /// Get a DespachoIncidenciaEntity by calling a Stored Procedure
        /// </summary>
        public Entities.DespachoIncidencia GetOne(System.Int32 Clave) {
            return Instance().GetOne( Clave);
        }

        // GetBy Objects and Params
            

        

        /// <summary>
        /// Get a DespachoIncidenciaList by calling a Stored Procedure
        /// </summary>
        public Entities.DespachoIncidenciaList GetByCorporacionIncidencia(System.Int32 Folio, System.Int32 ClaveCorporacion)
        {
            return Instance().GetByCorporacionIncidencia(Folio, ClaveCorporacion);
        }

        /// <summary>
        /// Get a DespachoIncidenciaList by calling a Stored Procedure
        /// </summary>
        public Entities.DespachoIncidenciaList GetByCorporacionIncidencia(IUniqueIdentifiable CorporacionIncidencia)
        {
            return Instance().GetByCorporacionIncidencia(CorporacionIncidencia);
        }

    

        /// <summary>
        /// Get a DespachoIncidenciaList by calling a Stored Procedure
        /// </summary>
        public Entities.DespachoIncidenciaList GetByUnidad(System.Int32 ClaveUnidad)
        {
            return Instance().GetByUnidad(ClaveUnidad);
        }

        /// <summary>
        /// Get a DespachoIncidenciaList by calling a Stored Procedure
        /// </summary>
        public Entities.DespachoIncidenciaList GetByUnidad(IUniqueIdentifiable ListaUnidades)
        {
            return Instance().GetByUnidad(ListaUnidades);
        }

    

        /// <summary>
        /// Get a DespachoIncidenciaList by calling a Stored Procedure
        /// </summary>
        public Entities.DespachoIncidenciaList GetByUnidadApoyo(System.Int32 ClaveUnidadApoyo)
        {
            return Instance().GetByUnidadApoyo(ClaveUnidadApoyo);
        }

        /// <summary>
        /// Get a DespachoIncidenciaList by calling a Stored Procedure
        /// </summary>
        public Entities.DespachoIncidenciaList GetByUnidadApoyo(IUniqueIdentifiable ListaUnidades)
        {
            return Instance().GetByUnidadApoyo(ListaUnidades);
        }

    

        /// <summary>
        /// Get a DespachoIncidenciaList by calling a Stored Procedure
        /// </summary>
        public Entities.DespachoIncidenciaList GetByUsuario(System.Int32 ClaveUsuario)
        {
            return Instance().GetByUsuario(ClaveUsuario);
        }

        /// <summary>
        /// Get a DespachoIncidenciaList by calling a Stored Procedure
        /// </summary>
        public Entities.DespachoIncidenciaList GetByUsuario(IUniqueIdentifiable Usuario)
        {
            return Instance().GetByUsuario(Usuario);
        }

    

       

        /// <summary>
        /// Delete children for DespachoIncidencia
        /// </summary>
        public void DeleteChildren(DbTransaction transaction, DespachoIncidencia entity)
        {
            Instance().DeleteChildren(transaction, entity);
        }

        

            

        

        /// <summary>
        /// Delete DespachoIncidencia by CorporacionIncidencia
        /// </summary>
        public void DeleteByCorporacionIncidencia(System.Int32 Folio, System.Int32 ClaveCorporacion)
        {
            Instance().DeleteByCorporacionIncidencia(Folio, ClaveCorporacion);
        }

        /// <summary>
        /// Delete DespachoIncidencia by CorporacionIncidencia
        /// </summary>
        public void DeleteByCorporacionIncidencia(IUniqueIdentifiable CorporacionIncidencia)
        {
            Instance().DeleteByCorporacionIncidencia(CorporacionIncidencia);
        }

    

        /// <summary>
        /// Delete DespachoIncidencia by Unidad
        /// </summary>
        public void DeleteByUnidad(System.Int32 ClaveUnidad)
        {
            Instance().DeleteByUnidad(ClaveUnidad);
        }

        /// <summary>
        /// Delete DespachoIncidencia by Unidad
        /// </summary>
        public void DeleteByUnidad(IUniqueIdentifiable ListaUnidades)
        {
            Instance().DeleteByUnidad(ListaUnidades);
        }

    

        /// <summary>
        /// Delete DespachoIncidencia by UnidadApoyo
        /// </summary>
        public void DeleteByUnidadApoyo(System.Int32 ClaveUnidadApoyo)
        {
            Instance().DeleteByUnidadApoyo(ClaveUnidadApoyo);
        }

        /// <summary>
        /// Delete DespachoIncidencia by UnidadApoyo
        /// </summary>
        public void DeleteByUnidadApoyo(IUniqueIdentifiable ListaUnidades)
        {
            Instance().DeleteByUnidadApoyo(ListaUnidades);
        }

    

        /// <summary>
        /// Delete DespachoIncidencia by Usuario
        /// </summary>
        public void DeleteByUsuario(System.Int32 ClaveUsuario)
        {
            Instance().DeleteByUsuario(ClaveUsuario);
        }

        /// <summary>
        /// Delete DespachoIncidencia by Usuario
        /// </summary>
        public void DeleteByUsuario(IUniqueIdentifiable Usuario)
        {
            Instance().DeleteByUsuario(Usuario);
        }

    
        /// <summary>
        /// Delete DespachoIncidencia 
        /// </summary>
        public void Delete(System.Int32 Clave){
            Instance().Delete(Clave);
        }

        /// <summary>
        /// Delete DespachoIncidencia 
        /// </summary>
        public void Delete(Entities.DespachoIncidencia entity ){
            Instance().Delete(entity);
        }

        /// <summary>
        /// Save DespachoIncidencia  
        /// </summary>
        public void Save(Entities.DespachoIncidencia entity){
            Instance().Save(entity);
        }

        /// <summary>
        /// Insert DespachoIncidencia 
        /// </summary>
        public void Insert(Entities.DespachoIncidencia entity){
            Instance().Insert(entity);
        }

        /// <summary>
        /// GetAll DespachoIncidencia 
        /// </summary>
        public Entities.DespachoIncidenciaList GetAll(){  
            return Instance().GetAll();
        }

        /// <summary>
        /// Save DespachoIncidencia 
        /// </summary>
        public void Save(System.Int32 Clave, System.Int32 ClaveCorporacion, System.Int32 ClaveUnidad, System.Int32 Folio, System.DateTime HoraDespachada, System.DateTime HoraLlegada, System.DateTime HoraLiberada, System.Int32 ClaveUnidadApoyo, System.Int32 ClaveUsuario){
            Entities.DespachoIncidencia entity = Instance().GetOne(Clave);
            if (entity == null)
                throw new ApplicationException(String.Format("Entity not found. IUniqueIdentifiable Values: {0} = {1}", "Clave", Clave));

            entity.ClaveCorporacion = ClaveCorporacion;
            entity.ClaveUnidad = ClaveUnidad;
            entity.Folio = Folio;
            entity.HoraDespachada = HoraDespachada;
            entity.HoraLlegada = HoraLlegada;
            entity.HoraLiberada = HoraLiberada;
            entity.ClaveUnidadApoyo = ClaveUnidadApoyo;
            entity.ClaveUsuario = ClaveUsuario;
            Instance().Save(entity);
        }

        /// <summary>
        /// Insert DespachoIncidencia
        /// </summary>
        public void Insert(System.Int32 ClaveCorporacion, System.Int32 ClaveUnidad, System.Int32 Folio, System.DateTime HoraDespachada, System.DateTime HoraLlegada, System.DateTime HoraLiberada, System.Int32 ClaveUnidadApoyo, System.Int32 ClaveUsuario){
            Entities.DespachoIncidencia entity = new Entities.DespachoIncidencia();

            entity.ClaveCorporacion = ClaveCorporacion;
            entity.ClaveUnidad = ClaveUnidad;
            entity.Folio = Folio;
            entity.HoraDespachada = HoraDespachada;
            entity.HoraLlegada = HoraLlegada;
            entity.HoraLiberada = HoraLiberada;
            entity.ClaveUnidadApoyo = ClaveUnidadApoyo;
            entity.ClaveUsuario = ClaveUsuario;
            Instance().Insert(entity);
        }


        //Database Queries 
        


    }
}





namespace BSD.C4.Tlaxcala.Sai.Dal.Rules.Loaders
{

    /// <summary>
    /// 
    /// </summary>
    public partial class DespachoIncidenciaLoader<T> : BaseLoader< T, DespachoIncidencia, ObjectList<T>>, IGenericGateway where T : DespachoIncidencia, new()
    {

        #region "Singleton"

        static DespachoIncidenciaLoader<T> _instance;

        private DespachoIncidenciaLoader()
        {
        }

        /// <summary>
        /// 
        /// </summary>
        public static DespachoIncidenciaLoader<T> Instance() {
            if (_instance == null) {
                if (HttpContext.Current == null) 
                    _instance = new DespachoIncidenciaLoader<T>();
                else {
                    DespachoIncidenciaLoader<T> inst = HttpContext.Current.Items["BSD.C4.Tlaxcala.Sai.Dal.Rules.DespachoIncidenciaLoaderSingleton"] as DespachoIncidenciaLoader<T>;
                    if (inst == null) {
                        inst = new DespachoIncidenciaLoader<T>();
                        HttpContext.Current.Items.Add("BSD.C4.Tlaxcala.Sai.Dal.Rules.DespachoIncidenciaLoaderSingleton", inst);
                    }
                    return inst;
                }
            }
            return _instance;
        }


        #endregion

        /// <summary>
        /// 
        /// </summary>
        public string[] GetPKPropertiesNames()
        {
            
            string[] s ={"Clave"};
            return s;
        }
        /// <summary>
        /// 
        /// </summary>
        public Type GetMappingType()
        {
            return typeof(DespachoIncidencia);
        }


        /// <summary>
        /// 
        /// </summary>
        protected override string TableName
        {
            get { return "DespachoIncidencia"; }
        }

        
        
        /// <summary>
        /// 
        /// </summary>
        protected override void HydrateFields(DbDataReader reader, DespachoIncidencia entity)
        {
            
            IMappeableDespachoIncidenciaObject DespachoIncidencia = (IMappeableDespachoIncidenciaObject)entity;
            DespachoIncidencia.HydrateFields(
            reader.GetInt32(0),
reader.GetInt32(1),
reader.GetInt32(2),
reader.GetInt32(3),
(reader.IsDBNull(4)) ? new System.Nullable<System.DateTime>() : reader.GetDateTime(4),
(reader.IsDBNull(5)) ? new System.Nullable<System.DateTime>() : reader.GetDateTime(5),
(reader.IsDBNull(6)) ? new System.Nullable<System.DateTime>() : reader.GetDateTime(6),
(reader.IsDBNull(7)) ? new System.Nullable<System.Int32>() : reader.GetInt32(7),
reader.GetInt32(8));
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string StoredProceduresPrefix()
        {
            return "up_";
        }


        
    

        

        /// <summary>
        /// Complete the aggregations for this entity. 
        /// </summary>
        protected override void CompleteEntity(T entity)
        {
            
            ((IMappeableDespachoIncidencia)entity).CompleteEntity();
        }


        



        /// <summary>
        /// Get a DespachoIncidencia by execute a SQL Query Text
        /// </summary>
        public T GetOneBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectBySQLText(sqlQueryText);
        }

        /// <summary>
        /// Get a DespachoIncidenciaList by execute a SQL Query Text
        /// </summary>
        public ObjectList<T> GetBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectListBySQLText(sqlQueryText);
        }

        /// <summary>
        /// GetOne By Params
        /// </summary>
        public T GetOne(System.Int32 Clave)
        {
            return base.GetObjectByAnyStoredProcedure(StoredProceduresPrefix() + "DespachoIncidencia_GetOne", Clave);
        }


        // GetOne By Objects and Params
            


        

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByCorporacionIncidencia(DbTransaction transaction, System.Int32 Folio, System.Int32 ClaveCorporacion)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "DespachoIncidencia_GetByCorporacionIncidencia", Folio, ClaveCorporacion);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByCorporacionIncidencia(DbTransaction transaction, IUniqueIdentifiable CorporacionIncidencia)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "DespachoIncidencia_GetByCorporacionIncidencia", CorporacionIncidencia.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByUnidad(DbTransaction transaction, System.Int32 ClaveUnidad)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "DespachoIncidencia_GetByUnidad", ClaveUnidad);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByUnidad(DbTransaction transaction, IUniqueIdentifiable ListaUnidades)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "DespachoIncidencia_GetByUnidad", ListaUnidades.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByUnidadApoyo(DbTransaction transaction, System.Int32 ClaveUnidadApoyo)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "DespachoIncidencia_GetByUnidadApoyo", ClaveUnidadApoyo);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByUnidadApoyo(DbTransaction transaction, IUniqueIdentifiable ListaUnidades)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "DespachoIncidencia_GetByUnidadApoyo", ListaUnidades.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByUsuario(DbTransaction transaction, System.Int32 ClaveUsuario)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "DespachoIncidencia_GetByUsuario", ClaveUsuario);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByUsuario(DbTransaction transaction, IUniqueIdentifiable Usuario)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "DespachoIncidencia_GetByUsuario", Usuario.Identifier());
        }

    


        

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByCorporacionIncidencia(System.Int32 Folio, System.Int32 ClaveCorporacion)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "DespachoIncidencia_GetByCorporacionIncidencia", Folio, ClaveCorporacion);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByCorporacionIncidencia(IUniqueIdentifiable CorporacionIncidencia)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "DespachoIncidencia_GetByCorporacionIncidencia", CorporacionIncidencia.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByUnidad(System.Int32 ClaveUnidad)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "DespachoIncidencia_GetByUnidad", ClaveUnidad);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByUnidad(IUniqueIdentifiable ListaUnidades)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "DespachoIncidencia_GetByUnidad", ListaUnidades.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByUnidadApoyo(System.Int32 ClaveUnidadApoyo)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "DespachoIncidencia_GetByUnidadApoyo", ClaveUnidadApoyo);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByUnidadApoyo(IUniqueIdentifiable ListaUnidades)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "DespachoIncidencia_GetByUnidadApoyo", ListaUnidades.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByUsuario(System.Int32 ClaveUsuario)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "DespachoIncidencia_GetByUsuario", ClaveUsuario);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByUsuario(IUniqueIdentifiable Usuario)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "DespachoIncidencia_GetByUsuario", Usuario.Identifier());
        }

    

        //Database Queries 
        



        #region IGenericGateway

        object IGenericGateway.GetOne(IUniqueIdentifiable identifier)
        {
            return base.GetOne(identifier);
        }

        object IGenericGateway.GetAll()
        {
            return base.GetAll();
        }

        object IGenericGateway.GetByParent(IUniqueIdentifiable parentEntity)
        {
            return base.GetByParent(parentEntity);
        }

        #endregion

    }
}





