
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 8/30/2009 - 1:47 PM
// This is a partial class file. The other one is RoboVehiculoAccesoriosEntity.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using BSD.C4.Tlaxcala.Sai.Dal.Rules.Objects;



using Cooperator.Framework.Core;
using Cooperator.Framework.Core.LazyLoad;
using System;

namespace BSD.C4.Tlaxcala.Sai.Dal.Rules.Entities
{

    /// <summary>
    /// 
    /// </summary>
    public partial class RoboVehiculoAccesorios : Objects.RoboVehiculoAccesoriosObject, IMappeableRoboVehiculoAccesorios, IEquatable<RoboVehiculoAccesorios>, ICloneable
    {

        #region "Ctor"

        /// <summary>
        /// 
        /// </summary>
        public RoboVehiculoAccesorios()
            :base()
        {
            if (_RoboAccesoriosEntity == null) _RoboAccesoriosEntity = new Objects.RoboAccesoriosObject();

        }

        /// <summary>
        /// 
        /// </summary>
        public RoboVehiculoAccesorios(
			System.Int32 IdAccesorio)
            : base()
        {

			_IdAccesorio = IdAccesorio;

            if (_RoboAccesoriosEntity == null) _RoboAccesoriosEntity = new Objects.RoboAccesoriosObject();

            Initialized();
        }

        

        /// <summary>
        /// 
        /// </summary>
        public RoboVehiculoAccesorios(
			System.Int32 IdAccesorio,
			System.Nullable<System.Int32> ClaveVehiculo,
			System.String AccesorioRobado,
			System.Int32 IdRoboAccesorio)
            : base()
        {

			_IdAccesorio = IdAccesorio;
			_ClaveVehiculo = ClaveVehiculo;
			_AccesorioRobado = AccesorioRobado;
			_IdRoboAccesorio = IdRoboAccesorio;

            if (_RoboAccesoriosEntity == null) _RoboAccesoriosEntity = new Objects.RoboAccesoriosObject();

            Initialized();
        }
        
        #endregion

        #region "Fields"

        /// <summary>
/// 
/// </summary>
protected Objects.RoboAccesoriosObject _RoboAccesoriosEntity;
/// <summary>
/// 
/// </summary>
protected Objects.VehiculoObject _VehiculoEntity;

        #endregion

        #region "Properties"
        
bool _RoboAccesoriosEntityFetched;

        /// <summary>
        /// 
        /// </summary>
        public virtual Objects.RoboAccesoriosObject RoboAccesoriosEntity
        {
            get
            {
                if (_RoboAccesoriosEntity== null  && ! _RoboAccesoriosEntityFetched ) {
_RoboAccesoriosEntityFetched = true;
Objects.RoboAccesoriosObject _RoboAccesoriosEntityTemp = new Objects.RoboAccesoriosObject(this.IdRoboAccesorio); 
ILazyProvider lazyProvider = LazyProviderFactory.Get(typeof(Objects.RoboAccesoriosObject));
 _RoboAccesoriosEntity = lazyProvider.GetEntity(typeof(Objects.RoboAccesoriosObject), _RoboAccesoriosEntityTemp) as Objects.RoboAccesoriosObject;
}

                return _RoboAccesoriosEntity;
            }
            set
            {
                base.PropertyModified();
                _RoboAccesoriosEntity = value;
                if (value != null) {
   _IdRoboAccesorio = value.IdRoboAccesorio;

} else {
   _IdRoboAccesorio = System.Int32.MinValue;

}

            }
        }
        
bool _VehiculoEntityFetched;

        /// <summary>
        /// 
        /// </summary>
        public virtual Objects.VehiculoObject VehiculoEntity
        {
            get
            {
                if (_VehiculoEntity== null  && this.ClaveVehiculo.HasValue && ! _VehiculoEntityFetched ) {
_VehiculoEntityFetched = true;
Objects.VehiculoObject _VehiculoEntityTemp = new Objects.VehiculoObject(this.ClaveVehiculo.Value); 
ILazyProvider lazyProvider = LazyProviderFactory.Get(typeof(Objects.VehiculoObject));
 _VehiculoEntity = lazyProvider.GetEntity(typeof(Objects.VehiculoObject), _VehiculoEntityTemp) as Objects.VehiculoObject;
}

                return _VehiculoEntity;
            }
            set
            {
                base.PropertyModified();
                _VehiculoEntity = value;
                if (value != null) {
   _ClaveVehiculo = value.Clave;

} else {
   _ClaveVehiculo = null;

}

            }
        }
        
        #endregion

        /// <summary>
        /// Returns de original value of entity since was created or restored.
        /// </summary>
        public new RoboVehiculoAccesorios OriginalValue()
        {
            return (RoboVehiculoAccesorios)base.OriginalValue();
        }

        /// <summary>
        /// 
        /// </summary>
        object ICloneable.Clone()
        {
            RoboVehiculoAccesorios newObject;            
            

            newObject = (RoboVehiculoAccesorios)this.MemberwiseClone();
            // Entities
                         
            if (this._RoboAccesoriosEntity != null)
            {
                newObject._RoboAccesoriosEntity = (Objects.RoboAccesoriosObject)((ICloneable)this._RoboAccesoriosEntity).Clone();
            }
                         
            if (this._VehiculoEntity != null)
            {
                newObject._VehiculoEntity = (Objects.VehiculoObject)((ICloneable)this._VehiculoEntity).Clone();
            }
            
            // Colections
            
            // OriginalValue
            RoboVehiculoAccesorios newOriginalValue;
            if (base._OriginalValue != null)
            {
                newOriginalValue = (RoboVehiculoAccesorios)this.OriginalValue().MemberwiseClone();
                // Entities
                             
                if (this.OriginalValue()._RoboAccesoriosEntity != null)
                {
                    newOriginalValue._RoboAccesoriosEntity = (Objects.RoboAccesoriosObject)((ICloneable)this.OriginalValue()._RoboAccesoriosEntity).Clone();
                }
                             
                if (this.OriginalValue()._VehiculoEntity != null)
                {
                    newOriginalValue._VehiculoEntity = (Objects.VehiculoObject)((ICloneable)this.OriginalValue()._VehiculoEntity).Clone();
                }
                
                // Colections
                            
                newObject._OriginalValue = newOriginalValue;

            }
            return newObject;            
        }



        /// <summary>
        /// 
        /// </summary>
        void IMappeableRoboVehiculoAccesorios.CompleteEntity(Objects.RoboAccesoriosObject RoboAccesoriosEntity, Objects.VehiculoObject VehiculoEntity)
        {
        _RoboAccesoriosEntity = RoboAccesoriosEntity;
_VehiculoEntity = VehiculoEntity;
        }
        
        bool IMappeableRoboVehiculoAccesorios.IsRoboAccesoriosEntityNull()
        {
            return (_RoboAccesoriosEntity == null);
        }
        
        bool IMappeableRoboVehiculoAccesorios.IsVehiculoEntityNull()
        {
            return (_VehiculoEntity == null);
        }
        

        /// <summary>
        /// 
        /// </summary>
        void IMappeableRoboVehiculoAccesorios.SetFKValuesForChilds(RoboVehiculoAccesorios entity)
        {
                
        }

        /// <summary>
        /// 
        /// </summary>
        public bool Equals(RoboVehiculoAccesorios other)
        {
            return UniqueIdentifierHelper.IsSameObject((IUniqueIdentifiable)this, (IUniqueIdentifiable)other);
        } 

    }

    /// <summary>
    /// 
    /// </summary>
    public interface IMappeableRoboVehiculoAccesorios
    {
        /// <summary>
        /// 
        /// </summary>
        void CompleteEntity(Objects.RoboAccesoriosObject RoboAccesoriosEntity, Objects.VehiculoObject VehiculoEntity);
        
        /// <summary>
        /// 
        /// </summary>
        bool IsRoboAccesoriosEntityNull();
        
        /// <summary>
        /// 
        /// </summary>
        bool IsVehiculoEntityNull();
        
        /// <summary>
        /// 
        /// </summary>
        void SetFKValuesForChilds(RoboVehiculoAccesorios entity);
    }

        /// <summary>
        /// 
        /// </summary>
    public partial class RoboVehiculoAccesoriosList : ObjectList<RoboVehiculoAccesorios>
    {
    }
}
namespace BSD.C4.Tlaxcala.Sai.Dal.Rules.Views
{
        /// <summary>
        /// 
        /// </summary>
    public partial class RoboVehiculoAccesoriosListView
        : ObjectListView<Entities.RoboVehiculoAccesorios>
    {
        /// <summary>
        /// 
        /// </summary>
        public RoboVehiculoAccesoriosListView(Entities.RoboVehiculoAccesoriosList list): base(list)
        {
        }
    }
}


