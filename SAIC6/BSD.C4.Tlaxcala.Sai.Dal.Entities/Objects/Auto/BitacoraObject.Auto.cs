
        
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 15/08/2009 - 05:12 p.m.
// This is a partial class file. The other one is BitacoraObject.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using Cooperator.Framework.Core;
using System;

namespace BSD.C4.Tlaxcala.Sai.Dal.Rules.Objects
{
    /// <summary>
    /// 
    /// </summary>
    public partial class BitacoraObject : BaseObject, IMappeableBitacoraObject, IUniqueIdentifiable, IEquatable<BitacoraObject>, ICloneable
    {

        #region "Ctor"

        /// <summary>
        /// 
        /// </summary>
        public BitacoraObject(): base()
        {

			_Clave =  ValuesGenerator.GetInt32;

        }

        /// <summary>
        /// 
        /// </summary>
        public BitacoraObject(
			System.Int32 Clave): base()
        {

			_Clave = Clave;

            Initialized();
        }

        
        /// <summary>
        /// 
        /// </summary>
        public BitacoraObject(
			System.Int32 Clave,
			System.String NombreCatalogo,
			System.String Descripcion,
			System.String NombrePropio,
			System.String Operacion,
			System.Nullable<System.DateTime> FechaOperacion,
			System.String ValorAnterior,
			System.String ValorActual): base()
        {

			_Clave = Clave;
			_NombreCatalogo = NombreCatalogo;
			_Descripcion = Descripcion;
			_NombrePropio = NombrePropio;
			_Operacion = Operacion;
			_FechaOperacion = FechaOperacion;
			_ValorAnterior = ValorAnterior;
			_ValorActual = ValorActual;

            Initialized();
        }
        

        #endregion

        #region "Events"
        
        
        #endregion

        #region "Fields"

            /// <summary>
/// 
/// </summary>
protected System.Int32 _Clave;
/// <summary>
/// 
/// </summary>
protected System.String _NombreCatalogo;
/// <summary>
/// 
/// </summary>
protected System.String _Descripcion;
/// <summary>
/// 
/// </summary>
protected System.String _NombrePropio;
/// <summary>
/// 
/// </summary>
protected System.String _Operacion;
/// <summary>
///
/// </summary>
protected System.Nullable<System.DateTime> _FechaOperacion;
/// <summary>
/// 
/// </summary>
protected System.String _ValorAnterior;
/// <summary>
/// 
/// </summary>
protected System.String _ValorActual;

        #endregion

        #region "Properties"
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.Int32 Clave
        {
            get
            {
                return _Clave;
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String NombreCatalogo
        {
            get
            {
                return _NombreCatalogo;
            }
            
            set
            {
                base.PropertyModified();
                _NombreCatalogo = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String Descripcion
        {
            get
            {
                return _Descripcion;
            }
            
            set
            {
                base.PropertyModified();
                _Descripcion = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String NombrePropio
        {
            get
            {
                return _NombrePropio;
            }
            
            set
            {
                base.PropertyModified();
                _NombrePropio = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String Operacion
        {
            get
            {
                return _Operacion;
            }
            
            set
            {
                base.PropertyModified();
                _Operacion = value;
                
            }
            
        }
        
        /// <summary>
        /// Nullable property
        /// </summary>
        public virtual System.Nullable<System.DateTime> FechaOperacion
        {
            get
            {
                return _FechaOperacion;
            }
            
            set
            {
                base.PropertyModified();
                _FechaOperacion = value;                
                
            }
            
        }
                
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String ValorAnterior
        {
            get
            {
                return _ValorAnterior;
            }
            
            set
            {
                base.PropertyModified();
                _ValorAnterior = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String ValorActual
        {
            get
            {
                return _ValorActual;
            }
            
            set
            {
                base.PropertyModified();
                _ValorActual = value;
                
            }
            
        }
        
        #endregion

        
            
                
        /// <summary>
        /// 
        /// </summary>
        protected override void SetOriginalValue()
        {
            base._OriginalValue = (IObject) this.MemberwiseClone();
        }

        /// <summary>
        /// 
        /// </summary>
        object ICloneable.Clone()
        {
            BitacoraObject newObject;
            BitacoraObject newOriginalValue;

            newObject = (BitacoraObject) this.MemberwiseClone();
            if (base._OriginalValue != null)
            {
                newOriginalValue = (BitacoraObject)this.OriginalValue().MemberwiseClone();
                newObject._OriginalValue = newOriginalValue;
            }
            return newObject;
        }


        /// <summary>
        /// Returns de original value of object since was created or restored.
        /// </summary>
        public new BitacoraObject OriginalValue()
        {
            return (BitacoraObject)base.OriginalValue();
        }


        /// <summary>
        /// 
        /// </summary>
        void IMappeableBitacoraObject.HydrateFields(
			System.Int32 Clave,
			System.String NombreCatalogo,
			System.String Descripcion,
			System.String NombrePropio,
			System.String Operacion,
			System.Nullable<System.DateTime> FechaOperacion,
			System.String ValorAnterior,
			System.String ValorActual)
        {
        _Clave = Clave;
_NombreCatalogo = NombreCatalogo;
_Descripcion = Descripcion;
_NombrePropio = NombrePropio;
_Operacion = Operacion;
_FechaOperacion = FechaOperacion;
_ValorAnterior = ValorAnterior;
_ValorActual = ValorActual;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeableBitacoraObject.GetFieldsForInsert()
        {
            object[] _myArray = new object[8];
            _myArray[0] = _Clave;
if (!System.String.IsNullOrEmpty(_NombreCatalogo)) _myArray[1] = _NombreCatalogo;
if (!System.String.IsNullOrEmpty(_Descripcion)) _myArray[2] = _Descripcion;
if (!System.String.IsNullOrEmpty(_NombrePropio)) _myArray[3] = _NombrePropio;
if (!System.String.IsNullOrEmpty(_Operacion)) _myArray[4] = _Operacion;
if (_FechaOperacion.HasValue) _myArray[5] = _FechaOperacion.Value;
if (!System.String.IsNullOrEmpty(_ValorAnterior)) _myArray[6] = _ValorAnterior;
if (!System.String.IsNullOrEmpty(_ValorActual)) _myArray[7] = _ValorActual;

            return _myArray;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeableBitacoraObject.GetFieldsForUpdate()
        {
            
            object[] _myArray = new object[8];
            _myArray[0] = _Clave;
if (!System.String.IsNullOrEmpty(_NombreCatalogo)) _myArray[1] = _NombreCatalogo;
if (!System.String.IsNullOrEmpty(_Descripcion)) _myArray[2] = _Descripcion;
if (!System.String.IsNullOrEmpty(_NombrePropio)) _myArray[3] = _NombrePropio;
if (!System.String.IsNullOrEmpty(_Operacion)) _myArray[4] = _Operacion;
if (_FechaOperacion.HasValue) _myArray[5] = _FechaOperacion.Value;
if (!System.String.IsNullOrEmpty(_ValorAnterior)) _myArray[6] = _ValorAnterior;
if (!System.String.IsNullOrEmpty(_ValorActual)) _myArray[7] = _ValorActual;

            return _myArray;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeableBitacoraObject.GetFieldsForDelete()
        {
            
            object[] _myArray = new object[1];
            _myArray[0] = _Clave;

            return _myArray;
        }


        /// <summary>
        /// 
        /// </summary>
        void IMappeableBitacoraObject.UpdateObjectFromOutputParams(object[] parameters){
            // Update properties from Output parameters
            _Clave = (System.Int32) parameters[0];

        }


        /// <summary>
        /// 
        /// </summary>
        object[] IUniqueIdentifiable.Identifier()
        {
            BitacoraObject o = null;
            if (ObjectStateHelper.IsModified(this))
                o = this.OriginalValue();
            else
                o = this;

            return new object[]
            {o.Clave};
        }


        /// <summary>
        /// 
        /// </summary>
        public bool Equals(BitacoraObject other)
        {
            return UniqueIdentifierHelper.IsSameObject((IUniqueIdentifiable)this, (IUniqueIdentifiable)other);
        }

    }

    /// <summary>
    /// 
    /// </summary>
    public interface IMappeableBitacoraObject
    {
        /// <summary>
        /// 
        /// </summary>
        void HydrateFields(System.Int32 Clave, 
			System.String NombreCatalogo, 
			System.String Descripcion, 
			System.String NombrePropio, 
			System.String Operacion, 
			System.Nullable<System.DateTime> FechaOperacion, 
			System.String ValorAnterior, 
			System.String ValorActual);

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForInsert();

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForUpdate();

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForDelete();

        /// <summary>
        /// 
        /// </summary>
        void UpdateObjectFromOutputParams(object[] parameters);
    }

    /// <summary>
    /// 
    /// </summary>
    public partial class BitacoraObjectList : ObjectList<BitacoraObject>
    {
    }
}

namespace BSD.C4.Tlaxcala.Sai.Dal.Rules.Views
{
    /// <summary>
    /// 
    /// </summary>
    public partial class BitacoraObjectListView
        : ObjectListView<Objects.BitacoraObject>
    {
        /// <summary>
        /// 
        /// </summary>
        public BitacoraObjectListView(Objects.BitacoraObjectList list): base(list)
        {
        }
    }
}


