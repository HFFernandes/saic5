
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 04/08/2009 - 01:50 p.m.
// This is a partial class file. The other one is VehiculoObject.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using Cooperator.Framework.Core;
using System;

namespace BSD.C4.Tlaxcala.Sai.Dal.Rules.Objects
{
    /// <summary>
    /// 
    /// </summary>
    public partial class VehiculoObject : BaseObject, IMappeableVehiculoObject, IUniqueIdentifiable, IEquatable<VehiculoObject>, ICloneable
    {

        #region "Ctor"

        /// <summary>
        /// 
        /// </summary>
        public VehiculoObject(): base()
        {

			_Clave =  ValuesGenerator.GetInt32;

        }

        /// <summary>
        /// 
        /// </summary>
        public VehiculoObject(
			System.Int32 Clave): base()
        {

			_Clave = Clave;

            Initialized();
        }

        
        /// <summary>
        /// 
        /// </summary>
        public VehiculoObject(
			System.Int32 Clave,
			System.String Marca,
			System.String Tipo,
			System.String Modelo,
			System.String Placas,
			System.String Color,
			System.String NumeroSerie,
			System.String SeñasParticulares): base()
        {

			_Clave = Clave;
			_Marca = Marca;
			_Tipo = Tipo;
			_Modelo = Modelo;
			_Placas = Placas;
			_Color = Color;
			_NumeroSerie = NumeroSerie;
			_SeñasParticulares = SeñasParticulares;

            Initialized();
        }
        

        #endregion

        #region "Events"
        
        
        #endregion

        #region "Fields"

            /// <summary>
/// 
/// </summary>
protected System.Int32 _Clave;
/// <summary>
/// 
/// </summary>
protected System.String _Marca;
/// <summary>
/// 
/// </summary>
protected System.String _Tipo;
/// <summary>
/// 
/// </summary>
protected System.String _Modelo;
/// <summary>
/// 
/// </summary>
protected System.String _Placas;
/// <summary>
/// 
/// </summary>
protected System.String _Color;
/// <summary>
/// 
/// </summary>
protected System.String _NumeroSerie;
/// <summary>
/// 
/// </summary>
protected System.String _SeñasParticulares;

        #endregion

        #region "Properties"
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.Int32 Clave
        {
            get
            {
                return _Clave;
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String Marca
        {
            get
            {
                return _Marca;
            }
            
            set
            {
                base.PropertyModified();
                _Marca = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String Tipo
        {
            get
            {
                return _Tipo;
            }
            
            set
            {
                base.PropertyModified();
                _Tipo = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String Modelo
        {
            get
            {
                return _Modelo;
            }
            
            set
            {
                base.PropertyModified();
                _Modelo = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String Placas
        {
            get
            {
                return _Placas;
            }
            
            set
            {
                base.PropertyModified();
                _Placas = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String Color
        {
            get
            {
                return _Color;
            }
            
            set
            {
                base.PropertyModified();
                _Color = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String NumeroSerie
        {
            get
            {
                return _NumeroSerie;
            }
            
            set
            {
                base.PropertyModified();
                _NumeroSerie = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String SeñasParticulares
        {
            get
            {
                return _SeñasParticulares;
            }
            
            set
            {
                base.PropertyModified();
                _SeñasParticulares = value;
                
            }
            
        }
        
        #endregion

        
            
                
        /// <summary>
        /// 
        /// </summary>
        protected override void SetOriginalValue()
        {
            base._OriginalValue = (IObject) this.MemberwiseClone();
        }

        /// <summary>
        /// 
        /// </summary>
        object ICloneable.Clone()
        {
            VehiculoObject newObject;
            VehiculoObject newOriginalValue;

            newObject = (VehiculoObject) this.MemberwiseClone();
            if (base._OriginalValue != null)
            {
                newOriginalValue = (VehiculoObject)this.OriginalValue().MemberwiseClone();
                newObject._OriginalValue = newOriginalValue;
            }
            return newObject;
        }


        /// <summary>
        /// Returns de original value of object since was created or restored.
        /// </summary>
        public new VehiculoObject OriginalValue()
        {
            return (VehiculoObject)base.OriginalValue();
        }


        /// <summary>
        /// 
        /// </summary>
        void IMappeableVehiculoObject.HydrateFields(
			System.Int32 Clave,
			System.String Marca,
			System.String Tipo,
			System.String Modelo,
			System.String Placas,
			System.String Color,
			System.String NumeroSerie,
			System.String SeñasParticulares)
        {
        _Clave = Clave;
_Marca = Marca;
_Tipo = Tipo;
_Modelo = Modelo;
_Placas = Placas;
_Color = Color;
_NumeroSerie = NumeroSerie;
_SeñasParticulares = SeñasParticulares;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeableVehiculoObject.GetFieldsForInsert()
        {
            object[] _myArray = new object[8];
            _myArray[0] = _Clave;
if (!System.String.IsNullOrEmpty(_Marca)) _myArray[1] = _Marca;
if (!System.String.IsNullOrEmpty(_Tipo)) _myArray[2] = _Tipo;
if (!System.String.IsNullOrEmpty(_Modelo)) _myArray[3] = _Modelo;
if (!System.String.IsNullOrEmpty(_Placas)) _myArray[4] = _Placas;
if (!System.String.IsNullOrEmpty(_Color)) _myArray[5] = _Color;
if (!System.String.IsNullOrEmpty(_NumeroSerie)) _myArray[6] = _NumeroSerie;
if (!System.String.IsNullOrEmpty(_SeñasParticulares)) _myArray[7] = _SeñasParticulares;

            return _myArray;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeableVehiculoObject.GetFieldsForUpdate()
        {
            
            object[] _myArray = new object[8];
            _myArray[0] = _Clave;
if (!System.String.IsNullOrEmpty(_Marca)) _myArray[1] = _Marca;
if (!System.String.IsNullOrEmpty(_Tipo)) _myArray[2] = _Tipo;
if (!System.String.IsNullOrEmpty(_Modelo)) _myArray[3] = _Modelo;
if (!System.String.IsNullOrEmpty(_Placas)) _myArray[4] = _Placas;
if (!System.String.IsNullOrEmpty(_Color)) _myArray[5] = _Color;
if (!System.String.IsNullOrEmpty(_NumeroSerie)) _myArray[6] = _NumeroSerie;
if (!System.String.IsNullOrEmpty(_SeñasParticulares)) _myArray[7] = _SeñasParticulares;

            return _myArray;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeableVehiculoObject.GetFieldsForDelete()
        {
            
            object[] _myArray = new object[1];
            _myArray[0] = _Clave;

            return _myArray;
        }


        /// <summary>
        /// 
        /// </summary>
        void IMappeableVehiculoObject.UpdateObjectFromOutputParams(object[] parameters){
            // Update properties from Output parameters
            _Clave = (System.Int32) parameters[0];

        }


        /// <summary>
        /// 
        /// </summary>
        object[] IUniqueIdentifiable.Identifier()
        {
            VehiculoObject o = null;
            if (ObjectStateHelper.IsModified(this))
                o = this.OriginalValue();
            else
                o = this;

            return new object[]
            {o.Clave};
        }


        /// <summary>
        /// 
        /// </summary>
        public bool Equals(VehiculoObject other)
        {
            return UniqueIdentifierHelper.IsSameObject((IUniqueIdentifiable)this, (IUniqueIdentifiable)other);
        }

    }

    /// <summary>
    /// 
    /// </summary>
    public interface IMappeableVehiculoObject
    {
        /// <summary>
        /// 
        /// </summary>
        void HydrateFields(System.Int32 Clave, 
			System.String Marca, 
			System.String Tipo, 
			System.String Modelo, 
			System.String Placas, 
			System.String Color, 
			System.String NumeroSerie, 
			System.String SeñasParticulares);

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForInsert();

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForUpdate();

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForDelete();

        /// <summary>
        /// 
        /// </summary>
        void UpdateObjectFromOutputParams(object[] parameters);
    }

    /// <summary>
    /// 
    /// </summary>
    public partial class VehiculoObjectList : ObjectList<VehiculoObject>
    {
    }
}

namespace BSD.C4.Tlaxcala.Sai.Dal.Rules.Views
{
    /// <summary>
    /// 
    /// </summary>
    public partial class VehiculoObjectListView
        : ObjectListView<Objects.VehiculoObject>
    {
        /// <summary>
        /// 
        /// </summary>
        public VehiculoObjectListView(Objects.VehiculoObjectList list): base(list)
        {
        }
    }
}


