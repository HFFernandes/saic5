
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 17/08/2009 - 04:24 p.m.
// This is a partial class file. The other one is OrganizacionObject.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using Cooperator.Framework.Core;
using System;

namespace BSD.C4.Tlaxcala.Sai.Dal.Rules.Objects
{
    /// <summary>
    /// 
    /// </summary>
    public partial class OrganizacionObject : BaseObject, IMappeableOrganizacionObject, IUniqueIdentifiable, IEquatable<OrganizacionObject>, ICloneable
    {

        #region "Ctor"

        /// <summary>
        /// 
        /// </summary>
        public OrganizacionObject(): base()
        {

			_Clave =  ValuesGenerator.GetInt32;

        }

        /// <summary>
        /// 
        /// </summary>
        public OrganizacionObject(
			System.Int32 Clave): base()
        {

			_Clave = Clave;

            Initialized();
        }

        
        /// <summary>
        /// 
        /// </summary>
        public OrganizacionObject(
			System.Int32 Clave,
			System.String Nombre,
			System.String Dirección,
			System.String Telefono,
			System.String Fax,
			System.String Email,
			System.String DireccionWeb,
			System.Int32 ClaveClasificacion): base()
        {

			_Clave = Clave;
			_Nombre = Nombre;
			_Dirección = Dirección;
			_Telefono = Telefono;
			_Fax = Fax;
			_Email = Email;
			_DireccionWeb = DireccionWeb;
			_ClaveClasificacion = ClaveClasificacion;

            Initialized();
        }
        

        #endregion

        #region "Events"
        
        
        #endregion

        #region "Fields"

            /// <summary>
/// 
/// </summary>
protected System.Int32 _Clave;
/// <summary>
/// 
/// </summary>
protected System.String _Nombre;
/// <summary>
/// 
/// </summary>
protected System.String _Dirección;
/// <summary>
/// 
/// </summary>
protected System.String _Telefono;
/// <summary>
/// 
/// </summary>
protected System.String _Fax;
/// <summary>
/// 
/// </summary>
protected System.String _Email;
/// <summary>
/// 
/// </summary>
protected System.String _DireccionWeb;
/// <summary>
/// 
/// </summary>
protected System.Int32 _ClaveClasificacion;

        #endregion

        #region "Properties"
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.Int32 Clave
        {
            get
            {
                return _Clave;
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String Nombre
        {
            get
            {
                return _Nombre;
            }
            
            set
            {
                base.PropertyModified();
                _Nombre = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String Dirección
        {
            get
            {
                return _Dirección;
            }
            
            set
            {
                base.PropertyModified();
                _Dirección = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String Telefono
        {
            get
            {
                return _Telefono;
            }
            
            set
            {
                base.PropertyModified();
                _Telefono = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String Fax
        {
            get
            {
                return _Fax;
            }
            
            set
            {
                base.PropertyModified();
                _Fax = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String Email
        {
            get
            {
                return _Email;
            }
            
            set
            {
                base.PropertyModified();
                _Email = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String DireccionWeb
        {
            get
            {
                return _DireccionWeb;
            }
            
            set
            {
                base.PropertyModified();
                _DireccionWeb = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.Int32 ClaveClasificacion
        {
            get
            {
                return _ClaveClasificacion;
            }
            
            set
            {
                base.PropertyModified();
                _ClaveClasificacion = value;
                
            }
            
        }
        
        #endregion

        
            
                
        /// <summary>
        /// 
        /// </summary>
        protected override void SetOriginalValue()
        {
            base._OriginalValue = (IObject) this.MemberwiseClone();
        }

        /// <summary>
        /// 
        /// </summary>
        object ICloneable.Clone()
        {
            OrganizacionObject newObject;
            OrganizacionObject newOriginalValue;

            newObject = (OrganizacionObject) this.MemberwiseClone();
            if (base._OriginalValue != null)
            {
                newOriginalValue = (OrganizacionObject)this.OriginalValue().MemberwiseClone();
                newObject._OriginalValue = newOriginalValue;
            }
            return newObject;
        }


        /// <summary>
        /// Returns de original value of object since was created or restored.
        /// </summary>
        public new OrganizacionObject OriginalValue()
        {
            return (OrganizacionObject)base.OriginalValue();
        }


        /// <summary>
        /// 
        /// </summary>
        void IMappeableOrganizacionObject.HydrateFields(
			System.Int32 Clave,
			System.String Nombre,
			System.String Dirección,
			System.String Telefono,
			System.String Fax,
			System.String Email,
			System.String DireccionWeb,
			System.Int32 ClaveClasificacion)
        {
        _Clave = Clave;
_Nombre = Nombre;
_Dirección = Dirección;
_Telefono = Telefono;
_Fax = Fax;
_Email = Email;
_DireccionWeb = DireccionWeb;
_ClaveClasificacion = ClaveClasificacion;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeableOrganizacionObject.GetFieldsForInsert()
        {
            object[] _myArray = new object[8];
            _myArray[0] = _Clave;
if (!System.String.IsNullOrEmpty(_Nombre)) _myArray[1] = _Nombre;
if (!System.String.IsNullOrEmpty(_Dirección)) _myArray[2] = _Dirección;
if (!System.String.IsNullOrEmpty(_Telefono)) _myArray[3] = _Telefono;
if (!System.String.IsNullOrEmpty(_Fax)) _myArray[4] = _Fax;
if (!System.String.IsNullOrEmpty(_Email)) _myArray[5] = _Email;
if (!System.String.IsNullOrEmpty(_DireccionWeb)) _myArray[6] = _DireccionWeb;
_myArray[7] = _ClaveClasificacion;

            return _myArray;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeableOrganizacionObject.GetFieldsForUpdate()
        {
            
            object[] _myArray = new object[8];
            _myArray[0] = _Clave;
if (!System.String.IsNullOrEmpty(_Nombre)) _myArray[1] = _Nombre;
if (!System.String.IsNullOrEmpty(_Dirección)) _myArray[2] = _Dirección;
if (!System.String.IsNullOrEmpty(_Telefono)) _myArray[3] = _Telefono;
if (!System.String.IsNullOrEmpty(_Fax)) _myArray[4] = _Fax;
if (!System.String.IsNullOrEmpty(_Email)) _myArray[5] = _Email;
if (!System.String.IsNullOrEmpty(_DireccionWeb)) _myArray[6] = _DireccionWeb;
_myArray[7] = _ClaveClasificacion;

            return _myArray;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeableOrganizacionObject.GetFieldsForDelete()
        {
            
            object[] _myArray = new object[1];
            _myArray[0] = _Clave;

            return _myArray;
        }


        /// <summary>
        /// 
        /// </summary>
        void IMappeableOrganizacionObject.UpdateObjectFromOutputParams(object[] parameters){
            // Update properties from Output parameters
            _Clave = (System.Int32) parameters[0];

        }


        /// <summary>
        /// 
        /// </summary>
        object[] IUniqueIdentifiable.Identifier()
        {
            OrganizacionObject o = null;
            if (ObjectStateHelper.IsModified(this))
                o = this.OriginalValue();
            else
                o = this;

            return new object[]
            {o.Clave};
        }


        /// <summary>
        /// 
        /// </summary>
        public bool Equals(OrganizacionObject other)
        {
            return UniqueIdentifierHelper.IsSameObject((IUniqueIdentifiable)this, (IUniqueIdentifiable)other);
        }

    }

    /// <summary>
    /// 
    /// </summary>
    public interface IMappeableOrganizacionObject
    {
        /// <summary>
        /// 
        /// </summary>
        void HydrateFields(System.Int32 Clave, 
			System.String Nombre, 
			System.String Dirección, 
			System.String Telefono, 
			System.String Fax, 
			System.String Email, 
			System.String DireccionWeb, 
			System.Int32 ClaveClasificacion);

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForInsert();

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForUpdate();

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForDelete();

        /// <summary>
        /// 
        /// </summary>
        void UpdateObjectFromOutputParams(object[] parameters);
    }

    /// <summary>
    /// 
    /// </summary>
    public partial class OrganizacionObjectList : ObjectList<OrganizacionObject>
    {
    }
}

namespace BSD.C4.Tlaxcala.Sai.Dal.Rules.Views
{
    /// <summary>
    /// 
    /// </summary>
    public partial class OrganizacionObjectListView
        : ObjectListView<Objects.OrganizacionObject>
    {
        /// <summary>
        /// 
        /// </summary>
        public OrganizacionObjectListView(Objects.OrganizacionObjectList list): base(list)
        {
        }
    }
}


